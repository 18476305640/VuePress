(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{283:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"devops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#devops"}},[t._v("#")]),t._v(" DevOps")]),t._v(" "),s("h2",{attrs:{id:"目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#devops-1"}},[t._v("DevOps")])]),t._v(" "),s("ul",[s("li",[s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#11%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%87%86%E5%A4%87"}},[t._v("1.1虚拟机的准备")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#21gitlab%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E7%9A%84%E5%87%86%E5%A4%87"}},[t._v("2.1Gitlab代码仓库的准备")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#31harbor%E4%BB%93%E5%BA%93"}},[t._v("3.1Harbor仓库")])]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#1-%E5%AE%89%E8%A3%85"}},[t._v("[1] 安装")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#2-%E9%A1%B9%E7%9B%AE%E4%B8%8E%E7%94%A8%E6%88%B7"}},[t._v("[2] 项目与用户")])])])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#41%E5%AE%89%E8%A3%85k8s%E9%9B%86%E7%BE%A4"}},[t._v("4.1安装K8S集群")])]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#1%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83"}},[t._v("1）基本环境")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#2docker%E7%9A%84%E5%AE%89%E8%A3%85"}},[t._v("2）Docker的安装")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#3%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85k8s"}},[t._v("3）开始安装K8S")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#4master%E8%8A%82%E7%82%B9%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96"}},[t._v("4）master节点的初始化")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#5%E7%BB%99%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%80%9A%E4%BF%A1%E7%BB%84%E4%BB%B6"}},[t._v("5）给集群安装通信组件")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#6%E6%9F%A5%E7%9C%8B%E8%8A%82%E7%82%B9%E7%9A%84%E7%8A%B6%E6%80%81"}},[t._v("6）查看节点的状态")])])])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#51%E5%AE%89%E8%A3%85jenkins"}},[t._v("5.1安装Jenkins")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#61%E6%95%B4%E5%90%88%E5%B7%A5%E4%BD%9C"}},[t._v("6.1整合工作")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#71-%E6%B5%81%E6%B0%B4%E7%BA%BF"}},[t._v("7.1 流水线")])])])])])])])]),t._v(" "),s("h1",{attrs:{id:"devops-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#devops-2"}},[t._v("#")]),t._v(" DevOps")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1646539691709641.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("总揽")])]),t._v(" "),s("p",[t._v("你需要学过Kubernetes，否则当不容易理解本教程！")]),t._v(" "),s("p",[t._v("我们需要有Gitlab，用户内部开发的仓库，开发的代码push到上面，还有要Harbor Docker镜像的私有仓库（私服），作为我们项目镜像的拉取部署。")]),t._v(" "),s("p",[t._v("然后搭建K8S集群（k8s-master，k8s-node01），将Jenkins部署在k8s上。然后进行各种准备工作，就可以对Gitlab的项目进行打包部署了。")]),t._v(" "),s("p",[t._v("资料："),s("a",{attrs:{href:"https://github.com/18476305640/fileBox/tree/main",title:"https://github.com/18476305640/fileBox/tree/main",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/18476305640/fileBox/tree/main"),s("OutboundLink")],1),t._v("  > DevOps")]),t._v(" "),s("p",[t._v("其它学习参考：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/note/DevOps/Kubernetes/Kubernetes.html",title:"Kubernetes"}},[t._v("Kubernetes")])],1),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/note/DevOps/Jenkins/Jenkins.html",title:"Jenkins"}},[t._v("Jenkins")])],1),t._v(" "),s("h3",{attrs:{id:"_1-1虚拟机的准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1虚拟机的准备"}},[t._v("#")]),t._v(" 1.1虚拟机的准备")]),t._v(" "),s("p",[t._v("推荐："),s("a",{attrs:{href:"http://mirrors.ustc.edu.cn/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso",title:"http://mirrors.ustc.edu.cn/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://mirrors.ustc.edu.cn/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("虚拟机：192.168.87.100 、192.168.87.101，192.168.87.102，192.168.87.103 。注意安装好虚拟机后，设置好静态ip（用nmtui命令）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16465422477121646542246944.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-1gitlab代码仓库的准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1gitlab代码仓库的准备"}},[t._v("#")]),t._v(" 2.1Gitlab代码仓库的准备")]),t._v(" "),s("p",[t._v("1）基本环境")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装相关依赖")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" policycoreutils openssh-server openssh-clients postﬁx\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动ssh服务&设置为开机启动")]),t._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" sshd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start sshd\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置postﬁx开机自启，并启动，postﬁx支持gitlab发信功能")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" postfix\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" postﬁx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" systemctl start postﬁx\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开放ssh以及http服务，然后重新加载防火墙列表")]),t._v("\nfirewall-cmd --add-service"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ssh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v("\nfirewall-cmd --add-service"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果关闭防火墙就不需要做以上配置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#下载gitlab包，并且安装在线下载安装包：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-12.4.2-ce.0.el6.x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-12.4.2-ce.0.el6.x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 86_64.rpm\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" gitlab-ce-12.4.2-ce.0.el6.x86_64.rpm\n")])])]),s("ol",[s("li",[t._v("修改gitlab配置")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/gitlab/gitlab.rb\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###修改gitlab访问地址和端口，默认为80，我们改为82 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改external_url 'http://192.168.87.100'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#加入nginx['listen_port'] = 82")]),t._v("\n")])])]),s("ol",[s("li",[t._v("重载配置及启动gitlab")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("gitlab-ctl reconfigure\ngitlab-ctl restart\n")])])]),s("ol",[s("li",[t._v("把端口添加到防火墙")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开放gitlab的82端口")]),t._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("82")]),t._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v(" \nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\n")])])]),s("p",[t._v("启动成功后，看到以下修改管理员root密码的页面，修改密码后，然后登录即可")]),t._v(" "),s("ol",[s("li",[t._v("卸载gitlab")])]),t._v(" "),s("p",[t._v("[教程]"),s("a",{attrs:{href:"https://www.cnblogs.com/peteremperor/p/10837551.html",title:"https://www.cnblogs.com/peteremperor/p/10837551.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/peteremperor/p/10837551.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("10、使用：\n先创建一个组，然后创建一个用户，在组中创建一个项目，为项目添加成员，切换到成员，进行日常开发！\n"),s("code",[t._v("创建组后向组中加入成员")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16346538723901634653872219.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_3-1harbor仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1harbor仓库"}},[t._v("#")]),t._v(" 3.1Harbor仓库")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627212945189-1627212945174.png",alt:""}})]),t._v(" "),s("p",[t._v("简介：")]),t._v(" "),s("p",[t._v("Harbor（港口，港湾）是一个用于存储和分发Docker镜像的企业级Registry服务器。\n除了Harbor这个私有镜像仓库之外，还有Docker官方提供的Registry。相对Registry，Harbor具有很\n多优势：")]),t._v(" "),s("ol",[s("li",[t._v("提供分层传输机制，优化网络传输 Docker镜像是是分层的，而如果每次传输都使用全量文件(所以")])]),t._v(" "),s("p",[t._v("用FTP的方式并不适合)，显然不经济。必须提供识别分层传输的机制，以层的UUID为标识，确定")]),t._v(" "),s("p",[t._v("传输的对象。")]),t._v(" "),s("ol",[s("li",[t._v("提供WEB界面，优化用户体验 只用镜像的名字来进行上传下载显然很不方便，需要有一个用户界")])]),t._v(" "),s("p",[t._v("面可以支持登陆、搜索功能，包括区分公有、私有镜像。")]),t._v(" "),s("ol",[s("li",[t._v("支持水平扩展集群 当有用户对镜像的上传下载操作集中在某服务器，需要对相应的访问压力作分")])]),t._v(" "),s("p",[t._v("解。")]),t._v(" "),s("ol",[s("li",[t._v("良好的安全机制 企业中的开发团队有很多不同的职位，对于不同的职位人员，分配不同的权限，")])]),t._v(" "),s("p",[t._v("具有更好的安全性。")]),t._v(" "),s("h4",{attrs:{id:"_1-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装"}},[t._v("#")]),t._v(" [1] 安装")]),t._v(" "),s("p",[t._v("1）先安装Docker并启动Docker（已完成）")]),t._v(" "),s("p",[t._v("参考之前的安装过程\n2）先安装docker-compose")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-L")]),t._v(" https://github.com/docker/compose/releases/download/1.27.2/docker-compose-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" /usr/local/bin/docker-compose  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#加速版 curl -L "https://get.daocloud.io/docker/compose/releases/download/1.27.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/docker-compose  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看版本")]),t._v("\n")])])]),s("p",[t._v("3）下载Harbor的压缩包（本课程版本为：v1.9.2）\n"),s("a",{attrs:{href:"https://github.com/goharbor/harbor/releases",title:"https://github.com/goharbor/harbor/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/goharbor/harbor/releases"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("4）安装开始")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-xzf")]),t._v(" harbor-offline-installer-v1.9.2.tgz "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" /usr/local/\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/harbor\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" harbor.yml\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改内容1:   hostname: 192.168.87.102")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改内容2:   port: 85  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改内容3：有http与https，就在前面，先一个，注释另一个。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#还可以修改登录密码，这里不作配置，下面使用的是默认的密码进行登录")]),t._v("\n\n./install.sh\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker-compose down -v #停止")]),t._v("\n\n")])])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16467492401271646749239917.png",alt:""}})]),t._v(" "),s("p",[t._v("5）添加为开机自启\nvim /lib/systemd/system/harbor.service")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[Unit]\nDescription=Harbor\nAfter=docker.service systemd-networkd.service systemd-resolved.service\nRequires=docker.service\nDocumentation=http://github.com/vmware/harbor\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5\nExecStart=/usr/local/bin/docker-compose -f  /usr/local/harbor/docker-compose.yml up\nExecStop=/usr/local/bin/docker-compose -f /usr/local/harbor/docker-compose.yml down\n\n[Install]\nWantedBy=multi-user.target\n\n")])])]),s("p",[t._v("systemctl enable harbor\nsystemctl is-enabled harbor")]),t._v(" "),s("p",[t._v("8）访问Harbor\n"),s("a",{attrs:{href:"http://192.168.66.102:85",title:"http://192.168.66.102:85",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://192.168.66.102:85"),s("OutboundLink")],1),t._v("\n默认账户密码：admin/Harbor12345")]),t._v(" "),s("p",[t._v("你可能会遇到的问题："),s("a",{attrs:{href:"https://www.cnblogs.com/hallejuayahaha/p/13926575.html",title:"https://www.cnblogs.com/hallejuayahaha/p/13926575.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/hallejuayahaha/p/13926575.html"),s("OutboundLink")],1),t._v(" （参考）博主遇到了docker-compose过低找不到，导致启动报错：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@localhost zhuangjie]# docker-compose up -d #启动\nERROR: \n        Can't find a suitable configuration file in this directory or any\n        parent. Are you in the right directory?\n\n        Supported filenames: docker-compose.yml, docker-compose.yaml\n        \n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#方法一重启!!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#方法二：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-L")]),t._v(" https://github.com/docker/compose/releases/download/1.27.2/docker-compose-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("\n\n./install.sh "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意还要cd到Harbor根目录执行")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2-项目与用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-项目与用户"}},[t._v("#")]),t._v(" [2] 项目与用户")]),t._v(" "),s("p",[t._v("登录后：")]),t._v(" "),s("p",[t._v("1）创建私有项目（项目分为公开项目与私有项目）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627218066729-1627218066687.png",alt:""}})]),t._v(" "),s("p",[t._v("2）创建用户")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627217685972-1627217685963.png",alt:""}})]),t._v(" "),s("p",[t._v("3）为项目添加成员：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627217922413-1627217922383.png",alt:""}})]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("角色")]),t._v(" "),s("th",[t._v("权限说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("访客")]),t._v(" "),s("td",[t._v("对于指定项目拥有只读权限")])]),t._v(" "),s("tr",[s("td",[t._v("开发人员")]),t._v(" "),s("td",[t._v("对于指定项目拥有读写权限")])]),t._v(" "),s("tr",[s("td",[t._v("维护人员")]),t._v(" "),s("td",[t._v("对于指定项目拥有读写权限，创建 Webhooks")])]),t._v(" "),s("tr",[s("td",[t._v("项目管理员")]),t._v(" "),s("td",[t._v("除了读写权限，同时拥有用户管理/镜像扫描等管理权限")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-1安装k8s集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1安装k8s集群"}},[t._v("#")]),t._v(" 4.1安装K8S集群")]),t._v(" "),s("p",[t._v("要用到2台机器,一台用于master节点，一台用于node节点。K8S集群至少两台。")]),t._v(" "),s("h4",{attrs:{id:"_1-基本环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本环境"}},[t._v("#")]),t._v(" 1）基本环境")]),t._v(" "),s("p",[s("strong",[t._v("以下三条命令分别在对应的机器执行")]),t._v("\nhostnamectl set-hostname k8s-master\nhostnamectl set-hostname k8s-node01")]),t._v(" "),s("p",[s("strong",[t._v("全k8s节点执行以下！")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将下面映射规则加入到hosts文件中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("/etc/hosts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n192.168.87.101 k8s-master\n192.168.87.103 k8s-node01\n192.168.87.104 k8s-node02 \nEOF")]),t._v("\n\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装必要软件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/redhat-release   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看版本，版本不要小于Centos Linux 7.5.1804 (Core) 这个版本")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#kubernetes要求集群中的节点时间必须精确一直，这里使用chronyd服务从网络同步时间")]),t._v("\nsystemctl start chronyd\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" chronyd\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ntpdate "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\nntpdate ntp.aliyun.com\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 关闭firewalld服务")]),t._v("\nsystemctl stop firewalld\nsystemctl disable firewalld\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 关闭iptables服务")]),t._v("\nsystemctl stop iptables\nsystemctl disable iptables\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  禁用selinux：编辑 /etc/selinux/config 文件，修改SELINUX的值为disable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/SELINUX/s/enforcing/disable/g'")]),t._v(" /etc/selinux/config\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#禁用swap：编辑分区配置文件/etc/fstab，注释掉swap分区一行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/swap/s/^\\//\\#\\//'")]),t._v(" /etc/fstab\nswapoff "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#临时关闭，否则master初始化报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改linux的内核参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改linux的内核采纳数，添加网桥过滤和地址转发功能")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑/etc/sysctl.d/kubernetes.conf文件，添加如下配置：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/sysctl.d/kubernetes.conf")]),t._v("\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sysctl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重新加载")]),t._v("\nmodprobe br_netfilter  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载网桥过滤模块")]),t._v("\nlsmod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" br_netfilter  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看网桥过滤模块是否加载成功")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.安装ipset和ipvsadm")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ipset ipvsadmin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.添加需要加载的模块写入脚本文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/sysconfig/modules/ipvs.modules\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\nEOF\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.为脚本添加执行权限")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /etc/sysconfig/modules/ipvs.modules\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.执行脚本文件")]),t._v("\n/bin/bash /etc/sysconfig/modules/ipvs.modules\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5.查看对应的模块是否加载成功")]),t._v("\nlsmod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" ip_vs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" nf_conntrack_ipv4\n\n\n")])])]),s("h4",{attrs:{id:"_2-docker的安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker的安装"}},[t._v("#")]),t._v(" 2）Docker的安装")]),t._v(" "),s("p",[t._v("两台机器都要安装docker！")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装必要的软件包")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" yum-utils  device-mapper-persistent-data  lvm2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置下载镜像的仓库")]),t._v("\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出docker包列表")]),t._v("\nyum list docker-ce "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--showduplicates")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装指定版本  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce-18.06.1.ce "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置开机启动  ")]),t._v("\nsystemctl is-enabled "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看是否设置为开机自启")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#加入docker从国内拉取镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/etc/docker/daemon.json\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://zydiol88.mirror.aliyuncs.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nEOF\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启docker")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("  \nsystemctl status "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看docker状态")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"_3-开始安装k8s"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-开始安装k8s"}},[t._v("#")]),t._v(" 3）开始安装K8S")]),t._v(" "),s("p",[t._v("安装k8s组件，以下K8S全节点执行！")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#清空yum缓存")]),t._v("\nyum clean all  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增kubeadm yum 源")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/yum.repos.d/kubernetes.repo")]),t._v("\n[kubernetes]\nname=Kubernetes Repo\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用yum下载安装包，进行本地安装，以免安装失败重新安装麻烦")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" kubelet-1.18.20 kubectl-1.18.20 kubeadm-1.18.20 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--downloadonly")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--downloaddir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#下载到当前目录，下载的版本是1.18.8")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装")]),t._v("\nyum localinstall "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" ./*.rpm\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#kubelet设置开机启动（注意：先不启动，现在启动的话会报错）")]),t._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" kubelet\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看版本")]),t._v("\nkubelet "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看需要的镜像 ")]),t._v("\nkubeadm config images list\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#![](https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16383719466961638371946651.png)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可配置设置拉取k8s的源 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/yum.repos.d/kubernetes.repo")]),t._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在安装kubernetes集群之前，必须要提前准备好集群需要的镜像，所需镜像可以通过下面命令查看")]),t._v("\nkubeadm config images list\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此镜像kubernetes的仓库中，由于网络原因，无法连接，下面提供了一种替换方案")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("images")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  kube-apiserver:v1.18.20\n  kube-controller-manager:v1.18.20\n  kube-scheduler:v1.18.20\n  kube-proxy:v1.18.20\n  pause:3.2\n  etcd:3.4.3-0\n  coredns:1.6.7\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("imageName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${images"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v(" k8s.gcr.io/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" rmi registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看下载好的镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\n\n\n")])])]),s("h4",{attrs:{id:"_4-master节点的初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-master节点的初始化"}},[t._v("#")]),t._v(" 4）master节点的初始化")]),t._v(" "),s("p",[t._v("k8s中的k8s-master节点初始化操作！")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始初始化")]),t._v("\nkubeadm init --kubernetes-version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.18")]),t._v(".20 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--apiserver-advertise-address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".87.101 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--service-cidr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),t._v(".0.0/16 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--pod-network-cidr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.222")]),t._v(".0.0/16\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始化 ，本质就是安装需要的组件的过程（可能要修改两处，版本与192.168.87.101）,特别感谢:https://blog.csdn.net/weixin_41831919/article/details/119790356")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始化失败？ 运行：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm reset ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf $HOME/.kube/config  & rm -rf $HOME/.kube; ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf /etc/cni/net.d   & ipvsadm --clear  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#再执行初始化命令 ")]),t._v("\n")])])]),s("p",[t._v("初始化成功后，会输出以下内容：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16383721743291638372174304.png",alt:""}})]),t._v(" "),s("p",[t._v("第一块（红色）的作用是给k8s-master执行，执行完后就可以在k8s-master上操作k8s集群了。")]),t._v(" "),s("p",[t._v("第二块是给k8s-node01进行注册成为集群的node节点的，需要保存这个！！")]),t._v(" "),s("p",[t._v("忘记加入集群链接？ ( 执行以下重新获取 )>> ")]),t._v(" "),s("p",[t._v("openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/zjazn/p/15971466.html",title:"想要卸载，还原成普通的主机？>>",target:"_blank",rel:"noopener noreferrer"}},[t._v("想要卸载，还原成普通的主机？>>"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("kubectl join 192.168.87.101:6443 --token 386k91.uao9n9hvhd52wqoz --discovery-token-ca-cert-hash sha256:c8d5cd5e82311f4e3d76473d6a03487fc26cea84a3a22c19737b12090e502f06 ")]),t._v(" "),s("h4",{attrs:{id:"_5-给集群安装通信组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-给集群安装通信组件"}},[t._v("#")]),t._v(" 5）给集群安装通信组件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" Calico\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Calico\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://d\nocs.projectcalico.org/manifests/calico.yaml  --no-check-certificate\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#搜索# no effect. This should fall within `--cluster-cidr`.  解注释下面的两行")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# no effect. This should fall within `--cluster-cidr`.")]),t._v("\n            - name: CALICO_IPV4POOL_CIDR\n              value: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.0/16"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#然后：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/192.168.0.0/10.222.0.0/g'")]),t._v(" calico.yaml\nkubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" calico.yaml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看是否运行正常")]),t._v("\nkubectl get pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kube-system  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" calico\n\n")])])]),s("h4",{attrs:{id:"_6-查看节点的状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-查看节点的状态"}},[t._v("#")]),t._v(" 6）查看节点的状态")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get nodes")]),t._v("\nNAME         STATUS   ROLES    AGE   VERSION\nk8s-master   Ready    master   34h   v1.18.20\nk8s-node01   Ready    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   34h   v1.18.20\n\n")])])]),s("p",[t._v("Ready   说明节点正常，NoReady  要等了。")]),t._v(" "),s("p",[t._v("实在不行，你可以尝试重装calico~")]),t._v(" "),s("p",[t._v("kubectl delete -f calico.yaml")]),t._v(" "),s("p",[t._v("kubectl create -f calico.yaml")]),t._v(" "),s("h3",{attrs:{id:"_5-1安装jenkins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1安装jenkins"}},[t._v("#")]),t._v(" 5.1安装Jenkins")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在master节点上安装nfs服务器，开放")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" nfs-utils "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#也需要安装这个！！！！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#准备公开一个目录，供jenkins存储")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" /opt/nfs/jenkins\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#*代表对所有IP都开放此目录，rw是读写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/exports")]),t._v("\n/opt/nfs/jenkins *(rw,no_root_squash)\nEOF")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置nfs开机自启动与现在启动")]),t._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" nfs\nsystemctl start nfs\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#去node节点上，查看是否共享成功")]),t._v("\nshowmount "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".87.101\n\n\n")])])]),s("p",[t._v("下载需要的资料(拿到DevOps目录下的文件)："),s("a",{attrs:{href:"https://github.com/18476305640/fileBox.git",title:"https://github.com/18476305640/fileBox.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/18476305640/fileBox.git"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("nfs-client")])]),t._v(" "),s("p",[t._v("先安装资料中的nfs-client，注意需要修改“deployment.yaml”文件中的nfs服务器地址，然后就安装nfs-client")]),t._v(" "),s("p",[t._v("kubectl create -f ./")]),t._v(" "),s("p",[s("code",[t._v("创建kube-ops名称空间")])]),t._v(" "),s("p",[t._v("kubectl create ns kube-ops #需要创建一个名称空间")]),t._v(" "),s("p",[s("code",[t._v("正式安装jenkins-master")])]),t._v(" "),s("p",[t._v('在安装jenkins-master中需要，然后就去资料中的"jenkins-master"中进行安装')]),t._v(" "),s("p",[t._v("kubectl create -f ./")]),t._v(" "),s("p",[t._v("kubectl get pod,svc -n kube-ops #查看分配的jenkins端口")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/03/04/20220304110307461.png",alt:""}})]),t._v(" "),s("p",[t._v("#然后利用"),s("a",{attrs:{href:"http://192.168.87.101:32053/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://192.168.87.101:32053/"),s("OutboundLink")],1),t._v(" 打开即可。")]),t._v(" "),s("p",[s("code",[t._v("获取token进行登录")])]),t._v(" "),s("p",[t._v("但登录要token，那么我们就去nfs中拿，注意不是页面提示的那个路线去，因为我们将jenkins部署在容器中，所以要到我们公开的nfs> jenkins中获取：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/03/04/20220304110531229.png",alt:""}})]),t._v(" "),s("p",[t._v("先不要安装插件，我们先进入，再自己安装用到的插件！")]),t._v(" "),s("p",[s("code",[t._v("安装插件")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/zjazn/p/15972044.html",title:"在安装插件前，我们需要切换为国内镜像>>",target:"_blank",rel:"noopener noreferrer"}},[t._v("在安装插件前，我们需要切换为国内镜像>>"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("然后安装插件：")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://plugins.jenkins.io/localization-zh-cn",title:"Localization: Chinese",target:"_blank",rel:"noopener noreferrer"}},[t._v("Localization: Chinese"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Git")]),t._v(" "),s("p",[t._v("Pipeline")]),t._v(" "),s("p",[t._v("Extended Choice Parameter")]),t._v(" "),s("p",[t._v("Kubernetes")]),t._v(" "),s("p",[s("code",[t._v("将jenkins与k8s整合")])]),t._v(" "),s("p",[t._v("需要插件：Kubernetes")]),t._v(" "),s("p",[t._v("进入Jenkins的 "),s("a",{attrs:{href:"http://192.168.87.101:32053/configureClouds/",title:"http://..../configureClouds/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://..../configureClouds/"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("新建云：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/03/04/20220304131836140.png",alt:""}})]),t._v(" "),s("p",[t._v("要填写的信息如下：")]),t._v(" "),s("p",[t._v("kubernetes")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://kubernetes.default.svc.cluster.local",title:"https://kubernetes.default.svc.cluster.local",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kubernetes.default.svc.cluster.local"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("kube-ops")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://jenkins.kube-ops.svc.cluster.local:8080",title:"http://jenkins.kube-ops.svc.cluster.local:8080",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://jenkins.kube-ops.svc.cluster.local:8080"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("安装jenkins-slave")])]),t._v(" "),s("p",[t._v("再公开一个目录maven:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#公开一个目录给jenkin-slave 用于存储maven包，追加的方式！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/exports")]),t._v("\n/opt/nfs/maven *(rw,no_root_squash)\nEOF")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启")]),t._v("\nsystemctl restart nfs\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#解决权限问题！！！这很重要！！！！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-R")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" /opt/nfs/maven\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" /var/run/docker.sock\n\n")])])]),s("p",[s("code",[t._v("安装jenkins-slave")])]),t._v(" "),s("p",[t._v("从资料中拿到这三个文件（"),s("a",{attrs:{href:"https://github.com/18476305640/fileBox/tree/main",title:"https://github.com/18476305640/fileBox/tree/main",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/18476305640/fileBox/tree/main"),s("OutboundLink")],1),t._v("  > DevOps > ）：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/03/04/20220304142538695.png",alt:""}})]),t._v(" "),s("p",[t._v("需要修改Dockerfile中的“harbor”维护者的名字（zhuangjie）。")]),t._v(" "),s("p",[t._v("在推送前，我们需要整合Harbor：")]),t._v(" "),s("p",[t._v("在K8S的第个节点都执行，将私服的Harbor加入信任镜像中！")]),t._v(" "),s("p",[t._v("vi /etc/docker/daemon.json #你可能要修改下面私服Harbor的信息")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://zydiol88.mirror.aliyuncs.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"insecure-registries"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.87.102:85"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("systemctl restart docker"),s("br"),t._v("\nsystemctl status docker  #查看docker状态")]),t._v(" "),s("p",[t._v("这样就将我们的私服加入了信任仓库中，我们就可以把镜像推送到Harbor上了")]),t._v(" "),s("p",[t._v("开始制作镜像：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" jenkins-slave-maven:latest "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#制作镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag jenkins-slave-maven:latest "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".87.102:85/library/jenkins-slave-maven:latest "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" login "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" admin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" gkmzjaznH21 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".87.102:85 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#先登录，使用admin账号才能推送到library上，这里我密码改了，如何没改admin密码是Harbor12345")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".87.102:85/library/jenkins-slave-maven:latest "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始推送")]),t._v("\n")])])]),s("h3",{attrs:{id:"_6-1整合工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1整合工作"}},[t._v("#")]),t._v(" 6.1整合工作")]),t._v(" "),s("p",[s("code",[t._v("获取k8s凭证(整合K8S)")])]),t._v(" "),s("p",[t._v("然后安装Kubernetes Continuous Deploy插件。")]),t._v(" "),s("p",[t._v("创建K8S凭证：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/03/04/20220304133757790.png",alt:""}})]),t._v(" "),s("p",[t._v("博主的：119251a2-c90b-456b-914b-04bf084ecb8a")]),t._v(" "),s("p",[s("strong",[t._v("创建secret")])]),t._v(" "),s("p",[t._v("能不能拉取镜像 部署看这个了，如果Harbor改变了,这里删掉重新创建，名字不改，其它的都是不用改的。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" login "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" zhuangjie "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" gkmzjaznH21 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".87.102:85\nkubectl create secret docker-registry registry-auth-secret --docker-server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".87.102:85 --docker-username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("zhuangjie --docker-password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gkmzjaznH21"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [--docker-email=2119299531@qq.com](mailto:--docker-email=2119299531@qq.com)")]),t._v("\nkubectl get secret "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存在即可“ registry-auth-secret”")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除：kubectl delete secret registry-auth-secret")]),t._v("\n")])])]),s("p",[t._v("****"),s("code",[t._v("(整合gitlab)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/03/04/20220304144622119.png",alt:""}})]),t._v(" "),s("p",[t._v("在Jenkins中添加普通账号-密码凭证：")]),t._v(" "),s("p",[t._v("zhuangjie gkmzjazn")]),t._v(" "),s("p",[t._v("博主的凭证：ea7e5a47-3e95-4575-82ff-5a97ac2f956f")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("在Jenkins中添加普通账号-密码凭证：")]),t._v(" "),s("p",[s("strong",[t._v("（zhuangjie/ gkmzjaznH21）：")])]),t._v(" "),s("p",[t._v("博主的凭证：b9b2f427-94d6-4001-b004-33f8489cf0dc")]),t._v(" "),s("h3",{attrs:{id:"_7-1-流水线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-流水线"}},[t._v("#")]),t._v(" 7.1 流水线")]),t._v(" "),s("p",[s("strong",[t._v("流水线：")])]),t._v(" "),s("p",[t._v("构建时需要两个，项目project_name（多选），与分支branch（字符）")]),t._v(" "),s("p",[t._v("请选择需要构建的项目")]),t._v(" "),s("p",[t._v("6")]),t._v(" "),s("p",[t._v(",")]),t._v(" "),s("p",[t._v("cart-service@53024,product-service@53022,store-service@53023,user-service@53021,uaa-service@53020,gateway-service@53010")]),t._v(" "),s("p",[t._v("branch")]),t._v(" "),s("p",[t._v("master")]),t._v(" "),s("p",[t._v("请输入分支名称")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v('“”def git_address = "http'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.87.100"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('82/zhuangjie/smallarea.git"\ndef git_auth = "ea7e5a47'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("3e95"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("4575"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("82ff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('5a97ac2f956f"\n//构建版本的名称\ndef tag = "latest"\n//Harbor私服地址\ndef harbor_url = "192.168.87.102'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('85"\n//Harbor的项目名称\ndef harbor_project_name = "smallarea"\n//Harbor的凭证\ndef harbor_auth = "b9b2f427'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("94d6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("4001"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("b004"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('33f8489cf0dc"\ndef secret_name = "registry'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('secret"\n//k8s凭证\ndef k8s_auth = "119251a2'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c90b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("456b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("914b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('04bf084ecb8a";\n//自定义内容\ndef find_block = '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v('\n    "gateway'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('service"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"distributed-smallarea-security"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('\n    "uaa'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('service"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"distributed-smallarea-security"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('\n    "cart'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('service"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"distributed-smallarea-service"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('\n    "product'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('service"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"distributed-smallarea-service"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('\n    "store'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('service"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"distributed-smallarea-service"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('\n    "user'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('service"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"distributed-smallarea-service"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n//自定义内容：common's install ，下面要install的以“"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('”隔开！  \ndef commons_block = "./".split(\''),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("')\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podTemplate(label")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jenkins-slave'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubernetes'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    containerTemplate(\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jnlp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.87.102:85/library/jenkins-slave-maven:latest"')]),t._v("\n    )"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    containerTemplate(\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docker'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker:stable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ttyEnabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat'")]),t._v("\n    )"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPathVolume(mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/var/run/docker.sock'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" '/var/run/docker.sock')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfsVolume(mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/local/apache-maven/repo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serverAddress")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.87.101'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serverPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" '/opt/nfs/maven')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n) \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n  node("jenkins'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('slave")'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      // 第一步\n      stage('拉取代码')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         checkout("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("$class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GitSCM'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'${branch}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("userRemoteConfigs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("credentialsId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${git_auth}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${git_address}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(")\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      // 第二步\n      stage('代码编译')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         //编译并安装公共工程\n         //自定义内容！！！\n         for (int i=0; i<commons_block.length; i++) "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            def install_path = commons_block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v('\n            sh "mvn '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("install_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(' clean install"\n         '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      // 第三步\n      stage('构建镜像，部署项目')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n          //把选择的项目信息转为数组\n      def selectedProjects = "$'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\".split('"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("')\n      \n            for(int i=0;i<selectedProjects.size();i++)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                //取出每个项目的名称和端口\n                def currentProject = selectedProjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(";\n                //项目名称\n                def currentProjectName = currentProject.split('@')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                //项目启动端口\n                def currentProjectPort = currentProject.split('@')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v('\n\n                 //定义镜像名称\n                 def imageName = "$'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("currentProjectName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\"\n                 //自定义内容\n                 //因为maven中的项目名与代码的项目名不同，如果不修改，找的是代码的项目名来打标签的，但实际是pom中定义的名称\n                 def _currentProjectName = currentProjectName.split('"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v('\n                 def _imageName = "$'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_currentProjectName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n         //编译，构建本地镜像\n         def parents = find_block'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("currentProjectName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v('\n         sh "mvn '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("parents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("currentProjectName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  clean package dockerfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build\"\n         container('docker') "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           \n           //给镜像打标签\n           //"),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),t._v(' 已修改 将“imageName” 替换为 “_imageName”\n           sh "docker tag $'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_imageName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("imageName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n\n           //登录Harbor，并上传镜像\n           withCredentials('),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usernamePassword(credentialsId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${harbor_auth}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("passwordVariable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usernameVariable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 'username')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(") "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n              //登录\n              sh "docker login '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("u $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n              //上传镜像\n              sh "docker push $'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("imageName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n           '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n           //删除本地镜像\n           //"),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),t._v(' 已修改 将“imageName” 替换为 “_imageName”\n           sh "docker rmi '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_imageName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n           sh "docker rmi '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("imageName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n         '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('\n         \n         def deploy_image_name = "$'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("harbor_project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("imageName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n         \n         //部署到K8S\n         //'),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),t._v(" 已修改 加入了"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v('parents\n           sh """\n                        sed '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i 's"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\\$IMAGE_NAME#${deploy_image_name}#' ${parents}/${currentProjectName}/deploy.yml")]),t._v("\n            sed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i 's"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\\$SECRET_NAME#${secret_name}#' ${parents}/${currentProjectName}/deploy.yml")]),t._v('\n                 """\n                      \n                 '),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetesDeploy configs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${parents}/${currentProjectName}/deploy.yml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubeconfigId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${k8s_auth}"')]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("解决遇到的问题")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("请确保内容充足，否则jenkins-slave在帮jenkins做编译时，会因内存不足下线！！")])]),t._v(" "),s("li",[s("p",[t._v("当遇到：INFO: Retrying request to {}->unix://localhost:80")]),t._v(" "),s("p",[t._v("在K8S各集群节点中执行："),s("strong",[t._v("chmod 777 /var/run/docker.sock")])])]),t._v(" "),s("li",[s("p",[t._v('如果你的项目名与代码的项目名相同，你需要修改上面的脚本，注释_imageName变量，且将脚本 中的"_ imageName" 改为“imageName”')])])])])}),[],!1,null,null,null);s.default=n.exports}}]);