(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{285:function(a,s,t){"use strict";t.r(s);var e=t(10),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"jenkins实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins实战"}},[a._v("#")]),a._v(" Jenkins实战")]),a._v(" "),s("h2",{attrs:{id:"目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[a._v("#")]),a._v(" 目录")]),a._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%AE%9E%E6%88%98"}},[a._v("持续集成实战")])]),a._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#gitlab%E4%BB%93%E5%BA%93-19216887100"}},[a._v("【GitLab仓库 192.168.87.100】")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#jenkins%E5%AE%89%E8%A3%85-19216887101"}},[a._v("【Jenkins安装 192.168.87.101】")])]),a._v(" "),s("ul",[s("li",[s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#1%E9%85%8D%E7%BD%AEjenkins"}},[a._v("1、配置Jenkins")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#2%E5%88%9B%E5%BB%BA%E4%B8%8Egitlab%E7%9A%84%E5%85%B3%E8%81%94"}},[a._v("2、创建与GitLab的关联")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#3%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E7%8E%AF%E5%A2%83"}},[a._v("3、构建流水线环境")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#4extended-choice-parameter%E5%8F%82%E6%95%B0%E6%9E%84%E5%BB%BA"}},[a._v("4、Extended Choice Parameter参数构建")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#5%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9"}},[a._v("5、注意事项")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#6%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5"}},[a._v("6、代码审查")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#sonar%E4%B8%8Ejenkins%E6%95%B4%E5%90%88"}},[a._v("Sonar与Jenkins整合")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#7%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85"}},[a._v("7、编译打包")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#8docker%E7%8E%AF%E5%A2%83"}},[a._v("8、Docker环境")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#9%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C"}},[a._v("9、镜像制作")])])])])])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#harbor%E7%8E%AF%E5%A2%83-19216887102"}},[a._v("【Harbor环境 192.168.87.102】")])]),a._v(" "),s("ul",[s("li",[s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#%E9%A1%B9%E7%9B%AE%E4%B8%8E%E7%94%A8%E6%88%B7"}},[a._v("【项目与用户】")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#1%E6%8E%A8%E9%80%81%E9%95%9C%E5%83%8F%E5%88%B0harbor"}},[a._v("1、推送镜像到Harbor")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#2%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F%E4%BB%8Eharbor"}},[a._v("2、拉取镜像从Harbor")])])])])])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#web%E6%9C%8D%E5%8A%A1%E5%99%A8-19216887103"}},[a._v("【Web服务器 192.168.87.103】")])]),a._v(" "),s("ul",[s("li",[s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#1%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2"}},[a._v("1、应用部署")])])]),a._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#2%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84nginx"}},[a._v("2、高可用的nginx")])])])])])])])])])]),a._v(" "),s("h1",{attrs:{id:"持续集成实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持续集成实战"}},[a._v("#")]),a._v(" 持续集成实战")]),a._v(" "),s("h2",{attrs:{id:"【gitlab仓库-192-168-87-100】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【gitlab仓库-192-168-87-100】"}},[a._v("#")]),a._v(" 【GitLab仓库 192.168.87.100】")]),a._v(" "),s("ol",[s("li",[a._v("安装相关依赖")])]),a._v(" "),s("p",[a._v("yum -y install policycoreutils openssh-server openssh-clients postﬁx")]),a._v(" "),s("ol",[s("li",[a._v("启动ssh服务&设置为开机启动")])]),a._v(" "),s("p",[a._v("systemctl enable sshd && sudo systemctl start sshd")]),a._v(" "),s("ol",[s("li",[a._v("设置postﬁx开机自启，并启动，postﬁx支持gitlab发信功能")])]),a._v(" "),s("p",[a._v("yum install postfix\nsystemctl enable postﬁx && systemctl start postﬁx")]),a._v(" "),s("ol",[s("li",[a._v("开放ssh以及http服务，然后重新加载防火墙列表")])]),a._v(" "),s("p",[a._v("firewall-cmd --add-service=ssh --permanent\nfirewall-cmd --add-service=http --permanent\nfirewall-cmd --reload")]),a._v(" "),s("p",[a._v("如果关闭防火墙就不需要做以上配置")]),a._v(" "),s("ol",[s("li",[a._v("下载gitlab包，并且安装在线下载安装包：")])]),a._v(" "),s("p",[a._v("wget "),s("a",{attrs:{href:"https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-12.4.2-ce.0.el6.x",title:"https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-12.4.2-ce.0.el6.x",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-12.4.2-ce.0.el6.x"),s("OutboundLink")],1),a._v(" 86_64.rpm")]),a._v(" "),s("ol",[s("li",[a._v("安装：")])]),a._v(" "),s("p",[a._v("rpm -i gitlab-ce-12.4.2-ce.0.el6.x86_64.rpm")]),a._v(" "),s("ol",[s("li",[a._v("修改gitlab配置")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /etc/gitlab/gitlab.rb\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("###修改gitlab访问地址和端口，默认为80，我们改为82 ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#修改external_url 'http://192.168.87.100'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#加入nginx['listen_port'] = 82")]),a._v("\n")])])]),s("ol",[s("li",[a._v("重载配置及启动gitlab")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("gitlab-ctl reconfigure\ngitlab-ctl restart\n")])])]),s("ol",[s("li",[a._v("把端口添加到防火墙")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("82")]),a._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v(" \nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--reload")]),a._v("\n")])])]),s("p",[a._v("启动成功后，看到以下修改管理员root密码的页面，修改密码后，然后登录即可\n9. 卸载gitlab\n[教程]"),s("a",{attrs:{href:"https://www.cnblogs.com/peteremperor/p/10837551.html",title:"https://www.cnblogs.com/peteremperor/p/10837551.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.cnblogs.com/peteremperor/p/10837551.html"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("10、使用：\n先创建一个组，然后创建一个用户，在组中创建一个项目，为项目添加成员，切换到成员，进行日常开发！\n"),s("code",[a._v("创建组后向组中加入成员")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16346538723901634653872219.png",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"【jenkins安装-192-168-87-101】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【jenkins安装-192-168-87-101】"}},[a._v("#")]),a._v(" 【Jenkins安装 192.168.87.101】")]),a._v(" "),s("p",[a._v("这里介绍两种方法，一种方法将最新版jenkins加入到yum源，另外一种是下载指定版本的rpm包")]),a._v(" "),s("p",[a._v("1）安装JDK")]),a._v(" "),s("p",[a._v("2）安装jenkins")]),a._v(" "),s("p",[a._v("wget -O ：下载并以不同的文件名保存")]),a._v(" "),s("p",[a._v("yum的repo中默认没有Jenkins，需要先将Jenkins存储库添加到yum repos，执行下面的命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#准备")]),a._v("\nyum  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" epel-release\nyum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" daemonize\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#正式安装")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--import")]),a._v(" https://pkg.jenkins.io/redhat-stable/jenkins.io.key\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" jenkins "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#默认安装最新的")]),a._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" jenkins  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#开机自启")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#vim /etc/sysconfig/jenkins   #修改内容： JENKINS_USER=“root” JENKINS_PORT=“8888”")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/JENKINS_PORT='),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("8080"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("/JENKINS_PORT="),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("8888"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v('/"')]),a._v(" /etc/sysconfig/jenkins\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" jenkins start  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启动")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#开放端口")]),a._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8888")]),a._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--reload")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#重载防火墙")]),a._v("\n\n")])])]),s("p",[a._v("打开浏览器访问 "),s("a",{attrs:{href:"http://192.168.87.101:8888",title:"http://192.168.87.101:8888",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://192.168.87.101:8888"),s("OutboundLink")],1)]),a._v(" "),s("h4",{attrs:{id:"_1、配置jenkins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、配置jenkins"}},[a._v("#")]),a._v(" 1、配置Jenkins")]),a._v(" "),s("p",[a._v("创建一个管理员用户 ->  实例配置  -> 可以安装推荐的插件或另一种。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16345225884471634522588357.png",alt:""}})]),a._v(" "),s("p",[a._v("3）配置为国内插件下载地址：")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("cd /var/lib/jenkins/updates\nsed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g' default.json\nsed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' default.json\n")])])]),s("p",[a._v("Manage Plugins点击Advanced，把Update Site改为国内插件下载地址：")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json",title:"https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("Sumbit后，在浏览器输入： "),s("a",{attrs:{href:"http://xn--101ip-fz1iv81h:8888/restart",title:"http://101机器ip:8888/restart",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://101机器ip:8888/restart"),s("OutboundLink")],1),a._v(" ，重启Jenkins")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627721279406-1627721279398.png",alt:""}})]),a._v(" "),s("p",[a._v("4）安装中文插件")]),a._v(" "),s("p",[a._v('安装插件的插件后，会帮我们安装中文插件，如果没有搜索"Chinese"，安装')]),a._v(" "),s("h4",{attrs:{id:"_2、创建与gitlab的关联"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建与gitlab的关联"}},[a._v("#")]),a._v(" 2、创建与GitLab的关联")]),a._v(" "),s("p",[a._v("以下步骤：使用普通凭证从gitlab上拉取代码 ->  使用ssh凭证从gitlab上拉取代码")]),a._v(" "),s("p",[s("code",[a._v("实现在Jenkins上拉取Gitlab上的代码")])]),a._v(" "),s("p",[a._v("在Jenkins上安装Credentials Binding ,安装 Git插件 、在Jenkins服务器上安装git (yum install git -y  && git --version)")]),a._v(" "),s("p",[a._v("1、创建普通凭证")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626250522291-1626250522234.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("使用ssh凭证来拉取")])]),a._v(" "),s("p",[a._v("2、使用ssh-keygen生成ssh，打开/root/.ssh/下cat公钥  复制到gitlab设置中的ssh：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626251665628-1626251665529.png",alt:""}})]),a._v(" "),s("p",[a._v("3、配置ssh凭证")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626252147796-1626252147756-image-20210714164202919.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"_3、构建流水线环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、构建流水线环境"}},[a._v("#")]),a._v(" 3、构建流水线环境")]),a._v(" "),s("p",[a._v("流水线构建项目，构建项目由之前的流程式转为了脚本（Pipeline）,我们创建一个流水线项目后，我们只需编写/生成一个Pipeline 即可完成对项目的拉取、构建、部署等操作。")]),a._v(" "),s("p",[a._v("以下步骤：安装插件（Pipeline，安装推荐的插件中包含）  -> 进行项目构建脚本（Pipeline）书写  ->  查看")]),a._v(" "),s("p",[s("code",[a._v("1、安装插件")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626419582840-1626419582796.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"_4、extended-choice-parameter参数构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、extended-choice-parameter参数构建"}},[a._v("#")]),a._v(" 4、Extended Choice Parameter参数构建")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16345284507411634528450683.png",alt:""}})]),a._v(" "),s("p",[a._v("示例：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/163453960961759d3f8f4632c99f1cb0ca9307497e741.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"_5、注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、注意事项"}},[a._v("#")]),a._v(" 5、注意事项")]),a._v(" "),s("p",[a._v("1)拉取代码时，Jenkins脚本中的git凭证是ssh")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16345397889081634539788897.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"_6、代码审查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、代码审查"}},[a._v("#")]),a._v(" 6、代码审查")]),a._v(" "),s("p",[s("code",[a._v("安装")])]),a._v(" "),s("blockquote",[s("p",[s("strong",[a._v("注意，sonar6.7版本需要一个mysql5.7的数据库，jdk1.8以上比如8.5")]),a._v(" ，然后再创建一个名为"),s("code",[a._v("sonar")]),a._v(" 的数据库。然后再开始安装Sonar，启动后再开放端口且登录获取token ：")])]),a._v(" "),s("p",[a._v("以下步骤：保证存在名为sonar的数据库 ->  安装Conar  -> 余下工作")]),a._v(" "),s("p",[s("code",[a._v("保证存在名为sonar的数据库")])]),a._v(" "),s("p",[s("code",[a._v("安装Conar")])]),a._v(" "),s("p",[a._v("下载sonar压缩包： "),s("a",{attrs:{href:"https://www.sonarqube.org/downloads/",title:"https://www.sonarqube.org/downloads/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.sonarqube.org/downloads/"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-6.7.4.zip\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" sonarqube-6.7.4.zip "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#解压")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" sonarqube-6.7.4/* /usr/local/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#移动文件")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("useradd")]),a._v(" sonar "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#创建sonar用户，必须sonar用于启动，否则报错")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chown")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-R")]),a._v(" sonar. /usr/local/sonarqube-6.7.4 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#更改sonar目录及文件权限修改sonar配置文件")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /usr/local/sonarqube-6.7.4/conf/sonar.properties\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#直接将下面粘贴到配置上去，而端口不作修改（默认9000）")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("sonar.jdbc.username")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("root\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("sonar.jdbc.password")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3333")]),a._v("  \n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("sonar.jdbc.url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("jdbc:mysql://localhost:3306/sonar?useUnicode"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("characterEncoding")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("utf8"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("rewriteBatchedStatements")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("useConﬁgs"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" maxPerformance"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("useSSL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /usr/local/sonarqube-6.7.4\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#su sonar 不能使用root用户启动！！！所以下面在root用户下使用如下使用启动")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("su")]),a._v(" sonar ./bin/linux-x86-64/sonar.sh start "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启动")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("su")]),a._v(" sonar ./bin/linux-x86-64/sonar.sh status "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看状态")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("su")]),a._v(" sonar ./bin/linux-x86-64/sonar.sh stop "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#停止")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tail")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" logs/sonar.logs "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看日志访问sonar http://192.168.66.101:9000")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#开放端口")]),a._v("\nfirewall-cmd  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9000")]),a._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--reload")]),a._v("\n\n")])])]),s("p",[s("code",[a._v("余下工作")])]),a._v(" "),s("p",[a._v("2)登录：默认  admin/admin")]),a._v(" "),s("p",[a._v("​\t获取token:")]),a._v(" "),s("p",[a._v("​\t输入admin , 得到如下信息,需要摘取保存token")]),a._v(" "),s("p",[a._v("​\tadmin: "),s("strong",[a._v("d6065dbc1e1cfcd3a9714614b16d6bd816246d29")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626709303395-1626709303372.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"sonar与jenkins整合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sonar与jenkins整合"}},[a._v("#")]),a._v(" Sonar与Jenkins整合")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626925229389-1626925229368.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("安装插件")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16345655278061634565527688.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("在Jenkins安装Sonar-Scanner工具")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626925200244-1626925200242-image-20210720211841704.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("Manage Jenkins->Global Tool Conﬁguration 添加一个凭证")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626925096630-1626925096623-image-20210720211228770.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("在jenkins“系统配置”中，作如下配置")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626925064354-1626925064346-image-20210720211416805.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("在项目Jenkins脚本中")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16345668961331634566895867.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"_7、编译打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、编译打包"}},[a._v("#")]),a._v(" 7、编译打包")]),a._v(" "),s("p",[s("code",[a._v("环境准备")])]),a._v(" "),s("p",[a._v("需要确保，jenkin主机安装了jdk、maven（配置好阿里云镜像，然后再看下面）\n2、Jenkins上配置")]),a._v(" "),s("p",[a._v("配置1：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626259189981-1626259189950.png",alt:""}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1626259391664-1626259391644.png",alt:""}})]),a._v(" "),s("p",[a._v("配置2：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627725746059-1627725746011.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("对于公共模块")])]),a._v(" "),s("p",[a._v("我们需要将公共依赖进行安装，所以需要编辑项目根目录下 “Jenkinsfile”  脚本,加入“编译，安装公共子工程” 这个 阶段：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//git凭证ID")]),a._v("\ndef git_auth "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3b3eca2f-e2d7-44e5-8e11-e98ee29953dc"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//git的url地址")]),a._v("\ndef git_url "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"git@192.168.87.133:zhuangjie/tensquare_back.git"')]),a._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'拉取代码'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("checkout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("$"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'GitSCM'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("branches")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*/${branch}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("doGenerateSubmoduleConfigurations")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("extensions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("submoduleCfg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("userRemoteConfigs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("credentialsId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"${git_auth}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"${git_url}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'代码审查'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        def scannerHome"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("tool "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'SonarQube-Scanner'")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//根据自己的Jenkinssonarqube-scanner环境修改")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("withSonarQubeEnv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ConarQube6.7'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//引入Jenkinssonarqube环境")]),a._v("\n                sh "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v('"\n    cd $'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("scannerHome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("sonar"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("scanner\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v('"\n        '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'编译，安装公共子工程'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n     sh "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mvn -f tensquare_common clean install"')]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v('然后在确保各个模块"pom.xml" 存在打包插件(父工程的该插件可以删除了)：')]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("plugins")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-boot-maven-plugin"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("plugins")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[s("code",[a._v("父模块上传到服务")])]),a._v(" "),s("p",[a._v("这样就能确保依赖安装能完成了。下面我们就进行对可运行的微服务进行打包：")]),a._v(" "),s("p",[a._v("因为zull这个模块时依赖了父模块，所以我们需要确保服务器的本地仓库有父工程：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@localhost tensquare"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# pwd")]),a._v("\n/root/.m2/repository/com/tensquare\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@localhost tensquare"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mv /home/zhuangjie/桌面/tensquare_parent/ ./")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@localhost tensquare"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ll")]),a._v("\ndrwxr-xr-x. "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" root      root      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("58")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("月  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("29")]),a._v(" 01:18 tensquare_common\ndrwxrwxrwx. "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" zhuangjie zhuangjie "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("58")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("月  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("29")]),a._v(" 01:37 tensquare_parent\n")])])]),s("p",[a._v("我们移动的文件目录：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627549375224-1627549375170.png",alt:""}})]),a._v(" "),s("p",[a._v("然后再进行构建。这样我们在拉取的代码目录中就打包好了该模块的jar文件（测试jar可正常运行）。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627549978651-1627549978565.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"_8、docker环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、docker环境"}},[a._v("#")]),a._v(" 8、Docker环境")]),a._v(" "),s("p",[a._v("简单一句话总结：Docker"),s("strong",[a._v("技术就是让我们更加高效轻松地将任何应用在")]),a._v("Linux"),s("strong",[a._v("服务器部署和使用")])]),a._v(" "),s("p",[a._v("`【Docker安装】``")]),a._v(" "),s("p",[a._v("1）卸载旧版本")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("yum list installed "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#列出当前所有docker的包")]),a._v("\nyum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" remove "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#的包名称 卸载docker包")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" /var/lib/docker "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除docker的所有镜像和容器")]),a._v("\n")])])]),s("p",[a._v("2）安装必要的软件包")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" yum-utils  device-mapper-persistent-data  lvm2\n")])])]),s("p",[a._v("3）设置下载的镜像仓库")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#或使用加速镜像:  yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo")]),a._v("\n")])])]),s("p",[a._v("4）列出需要安装的版本列表")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("yum list docker-ce "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--showduplicates")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v("  \n")])])]),s("p",[a._v("5）安装指定版本（这里使用18.0.1版本）")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" docker-ce-18.06.1.ce\n")])])]),s("p",[a._v("6）查看版本&设置开机自启")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#设置开机启动  ")]),a._v("\nsystemctl is-enabled "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看是否设置为开机自启")]),a._v("\n")])])]),s("p",[a._v("7）启动Docker")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启动")]),a._v("\n")])])]),s("p",[a._v("8）添加阿里云镜像下载地址（除此还是拉取与推送的信任列表）")]),a._v(" "),s("p",[a._v("vi /etc/docker/daemon.json")]),a._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://zydiol88.mirror.aliyuncs.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("9）重启Docker")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("  \nsystemctl status "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看docker状态")]),a._v("\n")])])]),s("p",[a._v("离线安装方式请参考："),s("a",{attrs:{href:"https://www.cnblogs.com/kingsonfu/p/11576797.html",title:"https://www.cnblogs.com/kingsonfu/p/11576797.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.cnblogs.com/kingsonfu/p/11576797.html"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("code",[a._v("【docker命令】")])]),a._v(" "),s("p",[a._v("1）镜像命令：")]),a._v(" "),s("p",[a._v("镜像：相当于应用的安装包，在Docker部署的任何应用都需要先构建成为镜像")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search 镜像名称 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#搜索镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull 镜像名称 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#拉取镜像 示例：docker pull nginx")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看本地所有镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" 镜像名称 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除镜像(即使在运行)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-qa")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除所有镜像")]),a._v("\n")])])]),s("p",[a._v("2）容器命令")]),a._v(" "),s("p",[a._v("容器：容器是由镜像创建而来。容器是Docker运行应用的载体，每个应用都分别运行在Docker的每个\n容器中。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-di")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" 对应宿主机那个端口:开放应用端口  镜像名称:标签 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#运行容器（默认是前台运行），di:i是运行，d是后台;  -p是public的意思;")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看运行的容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查询所有容器")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" 容器ID/容器名称 /bin/bash "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#进入容器内部")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start/stop/restart 容器名称/ID "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启动/停止/重启容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" 容器名称/ID "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除所有容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tail")]),a._v(" 行数 容器名  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看容器运行日志")]),a._v("\n")])])]),s("p",[s("code",[a._v("【镜像的制作】")])]),a._v(" "),s("p",[a._v('下面将 "ttensquare_eureka_server-1.0-SNAPSHOT.jar" enreka微服务制作成一个docker镜像')]),a._v(" "),s("p",[a._v("1）上传Eureka的微服务jar包到linux\n2）编写Dockerfile")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("FROM openjdk:8-jdk-alpine\nARG JAR_FILE\nCOPY "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${JAR_FILE}")]),a._v(" app.jar\nEXPOSE "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10086")]),a._v("\nENTRYPOINT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"java"')]),a._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-jar"')]),a._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/app.jar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("p",[a._v("3）构建镜像")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" build --build-arg "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("JAR_FILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("tensquare_eureka_server-1.0-SNAPSHOT.jar "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" eureka:v1 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("4）查看镜像是否创建成功")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images\n")])])]),s("p",[a._v("5）创建容器")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("eureka "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10086")]),a._v(":10086 eureka:v1\n")])])]),s("p",[a._v("6）访问容器\n"),s("a",{attrs:{href:"http://192.168.66.101:10086",title:"http://192.168.66.101:10086",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://192.168.66.101:10086"),s("OutboundLink")],1)]),a._v(" "),s("h4",{attrs:{id:"_9、镜像制作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、镜像制作"}},[a._v("#")]),a._v(" 9、镜像制作")]),a._v(" "),s("p",[a._v('在这个过程中不需要在Jenkins中安装插件来辅助，假如jenkins所在机器要向harbor机器推送容器，只需要jenkins对docker配置将harbor加入信任列表且能登录到Harbor服务器即可，Harbor能被登录成功即可！\n而对于项目内部，需要加入"Dockerfile" 文件')]),a._v(" "),s("p",[a._v("当程序在项目根目录下执行“mvn -f ${currentProjectName}  clean package dockerfile:build” 时，就会进行编译打包，制作成镜像！")]),a._v(" "),s("h2",{attrs:{id:"【harbor环境-192-168-87-102】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【harbor环境-192-168-87-102】"}},[a._v("#")]),a._v(" 【Harbor环境 192.168.87.102】")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627212945189-1627212945174.png",alt:""}})]),a._v(" "),s("p",[a._v("简介：")]),a._v(" "),s("p",[a._v("Harbor（港口，港湾）是一个用于存储和分发Docker镜像的企业级Registry服务器。\n除了Harbor这个私有镜像仓库之外，还有Docker官方提供的Registry。相对Registry，Harbor具有很\n多优势：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("提供分层传输机制，优化网络传输 Docker镜像是是分层的，而如果每次传输都使用全量文件(所以\n用FTP的方式并不适合)，显然不经济。必须提供识别分层传输的机制，以层的UUID为标识，确定\n传输的对象。")])]),a._v(" "),s("li",[s("p",[a._v("提供WEB界面，优化用户体验 只用镜像的名字来进行上传下载显然很不方便，需要有一个用户界\n面可以支持登陆、搜索功能，包括区分公有、私有镜像。")])]),a._v(" "),s("li",[s("p",[a._v("支持水平扩展集群 当有用户对镜像的上传下载操作集中在某服务器，需要对相应的访问压力作分\n解。")])]),a._v(" "),s("li",[s("p",[a._v("良好的安全机制 企业中的开发团队有很多不同的职位，对于不同的职位人员，分配不同的权限，\n具有更好的安全性。")])])]),a._v(" "),s("p",[a._v("1）先安装Docker并启动Docker（已完成）")]),a._v(" "),s("p",[a._v("参考之前的安装过程\n2）先安装docker-compose")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" https://github.com/docker/compose/releases/download/1.27.2/docker-compose-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/local/bin/docker-compose  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#安装")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#加速版 curl -L "https://get.daocloud.io/docker/compose/releases/download/1.27.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看版本")]),a._v("\n")])])]),s("p",[a._v("3）下载Harbor的压缩包（本课程版本为：v1.9.2）\n"),s("a",{attrs:{href:"https://github.com/goharbor/harbor/releases",title:"https://github.com/goharbor/harbor/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/goharbor/harbor/releases"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("4）安装开始")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xzf")]),a._v(" harbor-offline-installer-v1.9.2.tgz "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" /usr/local/\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /usr/local/harbor\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" harbor.yml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#修改内容1:   hostname: 192.168.87.102")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#修改内容2:   port: 85")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#还可以修改登录密码，这里不作配置，下面使用的是默认的密码进行登录")]),a._v("\n\n./install.sh\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启动")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#docker-compose down -v #停止")]),a._v("\n\n")])])]),s("p",[a._v("5）添加为开机自启\nvim /lib/systemd/system/harbor.service")]),a._v(" "),s("div",{staticClass:"language-shell= extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[Unit]\nDescription=Harbor\nAfter=docker.service systemd-networkd.service systemd-resolved.service\nRequires=docker.service\nDocumentation=http://github.com/vmware/harbor\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5\nExecStart=/usr/local/bin/docker-compose -f  /usr/local/harbor/docker-compose.yml up\nExecStop=/usr/local/bin/docker-compose -f /usr/local/harbor/docker-compose.yml down\n\n[Install]\nWantedBy=multi-user.target\n\n")])])]),s("p",[a._v("systemctl enable harbor\nsystemctl is-enabled harbor")]),a._v(" "),s("p",[a._v("8）访问Harbor\n"),s("a",{attrs:{href:"http://192.168.66.102:85",title:"http://192.168.66.102:85",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://192.168.66.102:85"),s("OutboundLink")],1),a._v("\n默认账户密码：admin/Harbor12345")]),a._v(" "),s("p",[a._v("你可能会遇到的问题："),s("a",{attrs:{href:"https://www.cnblogs.com/hallejuayahaha/p/13926575.html",title:"https://www.cnblogs.com/hallejuayahaha/p/13926575.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.cnblogs.com/hallejuayahaha/p/13926575.html"),s("OutboundLink")],1),a._v(" （参考）博主遇到了docker-compose过低找不到，导致启动报错：")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@localhost zhuangjie]# docker-compose up -d #启动\nERROR: \n        Can't find a suitable configuration file in this directory or any\n        parent. Are you in the right directory?\n\n        Supported filenames: docker-compose.yml, docker-compose.yaml\n        \n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#方法一重启")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#方法二：")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" https://github.com/docker/compose/releases/download/1.27.2/docker-compose-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("\n\n./install.sh "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#注意还要cd到Harbor根目录执行")]),a._v("\n")])])]),s("h4",{attrs:{id:"【项目与用户】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【项目与用户】"}},[a._v("#")]),a._v(" 【项目与用户】")]),a._v(" "),s("p",[a._v("登录后：")]),a._v(" "),s("p",[a._v("1）创建私有项目（项目分为公开项目与私有项目）")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627218066729-1627218066687.png",alt:""}})]),a._v(" "),s("p",[a._v("2）创建用户")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627217685972-1627217685963.png",alt:""}})]),a._v(" "),s("p",[a._v("3）为项目添加成员：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627217922413-1627217922383.png",alt:""}})]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("角色")]),a._v(" "),s("th",[a._v("权限说明")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("访客")]),a._v(" "),s("td",[a._v("对于指定项目拥有只读权限")])]),a._v(" "),s("tr",[s("td",[a._v("开发人员")]),a._v(" "),s("td",[a._v("对于指定项目拥有读写权限")])]),a._v(" "),s("tr",[s("td",[a._v("维护人员")]),a._v(" "),s("td",[a._v("对于指定项目拥有读写权限，创建 Webhooks")])]),a._v(" "),s("tr",[s("td",[a._v("项目管理员")]),a._v(" "),s("td",[a._v("除了读写权限，同时拥有用户管理/镜像扫描等管理权限")])])])]),a._v(" "),s("h4",{attrs:{id:"_1、推送镜像到harbor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、推送镜像到harbor"}},[a._v("#")]),a._v(" 1、推送镜像到Harbor")]),a._v(" "),s("p",[a._v("1）给镜像打上标签")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" tag eureka:v1 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".208.157:85/uplog/eureka:v1\n")])])]),s("p",[a._v("2）推送镜像(会遇到二个问题，请解决)")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("问题1：需要把Harbor地址加入到Docker信任列表,不解决，推送会提示：\nvi /etc/docker/daemon.json\n需要重启Docker")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("The push refers to repository [192.168.66.102:85/tensquare/eureka]\nGet https://192.168.66.102:85/v2/: http: server gave HTTP response to HTTPS\nclient\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://zydiol88.mirror.aliyuncs.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(",\n "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"insecure-registries"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"192.168.208.157:85"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("问题2：权限不足，不解决，推送会提示：“denied: requested access to the resource is denied”")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#docker login -u 用户名 -p 密码 192.168.66.102:85")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@localhost 桌面"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker login -u zhuangjie  -p gkmzjaznH21  192.168.87.102:85")]),a._v("\nLogin Succeeded\n")])])])]),a._v(" "),s("li",[s("p",[a._v("推送")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" push "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".208.157:85/uplog/eureka\n")])])])])]),a._v(" "),s("p",[a._v("3）登录Harbor查看")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1627219857216-1627219857185.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"_2、拉取镜像从harbor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、拉取镜像从harbor"}},[a._v("#")]),a._v(" 2、拉取镜像从Harbor")]),a._v(" "),s("p",[a._v("存在Docker后，我们做以下准备，这样才能确保我们能从Harbor中拉取镜像：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("需要把Harbor地址加入到Docker信任列表,不解决，推送会提示：\nvi /etc/docker/daemon.json\n需要重启Docker")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("The push refers to repository [192.168.66.102:85/tensquare/eureka]\nGet https://192.168.66.102:85/v2/: http: server gave HTTP response to HTTPS\nclient\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://zydiol88.mirror.aliyuncs.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(",\n "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"insecure-registries"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"192.168.208.157:85"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("准备拉取")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" login "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" zhuangjie "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" zhuangJIE3333 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".208.157:85  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#登录")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".208.157:85/uplog/eureka:v1  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#拉取，该拉取命令直接从Harbor上一键复制")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看本地镜像")]),a._v("\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"【web服务器-192-168-87-103】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【web服务器-192-168-87-103】"}},[a._v("#")]),a._v(" 【Web服务器 192.168.87.103】")]),a._v(" "),s("h4",{attrs:{id:"_1、应用部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、应用部署"}},[a._v("#")]),a._v(" 1、应用部署")]),a._v(" "),s("p",[a._v("分布式应用部署，我们需要再加入一台web服务器：\n环境初始化：")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("systemctl enable sshd && sudo systemctl start sshd\n\nfirewall-cmd --add-service=ssh --permanent\nfirewall-cmd --add-service=http --permanent\nfirewall-cmd --reload\n")])])]),s("p",[a._v("环境：必须安装jdk, docker（然后将harbor加入信任列表：），")]),a._v(" "),s("p",[a._v("vi /etc/docker/daemon.json")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('{\n "registry-mirrors": ["https://zydiol88.mirror.aliyuncs.com"],\n "insecure-registries": ["192.168.87.102:85"]\n}\n')])])]),s("p",[a._v("sudo systemctl restart docker   #重启\nsystemctl status docker  #查看docker状态")]),a._v(" "),s("p",[a._v("jenkins安装 “Publish over SSH” 插件，现在的问题是如何通过ssh控制一web服务器了。")]),a._v(" "),s("p",[a._v("1）需要在jenkins服务器中执行  ssh-copy-id 192.168.87.104 到新的web的服务器，然后再到jenkins配置一下，就可以使用这个web服务器进行部署了")]),a._v(" "),s("p",[a._v('2）在jenkins 的”全局配置“中配置"Publish over SSH" 的内容。怎么配置？')]),a._v(" "),s("p",[a._v("【Passphrse】密码，好像没有设置，如果设置了，需要填写。\n【Path to key】key文件的路径（私钥）/root/.ssh/id_rsa\n【Key】为空，也 可以测试成功**。注意如果 “/root/.ssh/id_rsa” 文件找不到需要将.ssh的私钥粘贴到文本框中，至于是root还是其它用户，要看使用copy命令时用的是哪个用户执行的了。**")]),a._v(" "),s("p",[a._v("【SSH Server Name】标识的名字，随便你取什么名字\n【Hostname】需要连接ssh的主机名或ip地址，此处填写应用服务器IP（建议ip）\n【Username】用户名\n【Remote Directory】远程目录(根据需要填写文件传到此目录下)\n【Test Configuration】配置完成，点击test会显示Success![]")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1628093028483-1628093028472.png",alt:""}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1628083784632-1628083784445.png",alt:""}})]),a._v(" "),s("p",[a._v("完整”Jenkinsfile“:")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('//git凭证ID\ndef git_auth = "da1d1333-c35f-415a-903c-b8d58c870c56"\n//git的url地址\ndef git_url = "git@192.168.87.100:zhuangjie/tensquare_back.git"\n\n//镜像的版本号\ndef tag = "latest"\n//Harbor的url地址\ndef harbor_url = "192.168.87.102:85"\n//镜像库项目名称\ndef harbor_project = "uplog"\n//Harbor的登录凭证ID\ndef harbor_auth = "ef2651c8-92a7-4edb-b4ca-4e182fadf0ca"\n\nnode {\n    //获取当前选择的项目名称\n    def selectedProjectNames = "${project_name}".split(",")\n    //把选择的服务器信息转为数组\n    def selectedServers = "${publish_server}".split(\',\')\n\n   stage(\'拉取代码\') {\n      checkout([$class: \'GitSCM\', branches: [[name: "*/${branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: "${git_auth}", url: "${git_url}"]]])\n   }\n   stage(\'代码审查\') {\n        for (int i=0; i<selectedProjectNames.length; i++) {\n            //tensquare_eureka_server@10086\n            def projectInfo = selectedProjectNames[i];\n            //当前遍历的项目名称\n            def currentProjectName = "${projectInfo}".split("@")[0]\n            //当前遍历的项目端口\n            def currentProjectPort = "${projectInfo}".split("@")[1]\n            def scannerHome=tool \'SonarQube-Scanner\'//根据自己的Jenkinssonarqube-scanner环境修改\n            withSonarQubeEnv(\'SonarQube6.7\'){ //引入Jenkinssonarqube环境\n                sh """\n                cd ${currentProjectName}\n                ${scannerHome}/bin/sonar-scanner\n              """\n            }\n\n        }\n\n\n   }\n   stage(\'编译，安装公共子工程\') {\n     sh "mvn -f tensquare_common clean install"\n   }\n   stage(\'编译，打包微服务工程，上传镜像\') {\n        for (int i=0; i<selectedProjectNames.length; i++) {\n            //tensquare_eureka_server@10086\n            def projectInfo = selectedProjectNames[i];\n            //当前遍历的项目名称\n            def currentProjectName = "${projectInfo}".split("@")[0]\n            //当前遍历的项目端口\n            def currentProjectPort = "${projectInfo}".split("@")[1]\n            sh "echo \'开始制作镜像\'"\n            sh "mvn -f ${currentProjectName}  clean package dockerfile:build"\n            sh "echo \'镜像制作好了\'"\n            //定义镜像名称\n            def imageName = "${currentProjectName}:${tag}"\n            //对镜像打上标签\n            sh "docker tag ${imageName} ${harbor_url}/${harbor_project}/${imageName}"\n            //把镜像推送到Harbor\n            withCredentials([usernamePassword(credentialsId: "${harbor_auth}", passwordVariable: \'password\', usernameVariable: \'username\')]) {\n                    //登录到Harbor\n                    sh "docker login -u ${username} -p ${password} ${harbor_url}"\n                    //镜像上传\n                    sh "docker push ${harbor_url}/${harbor_project}/${imageName}"\n                    sh "echo 镜像上传成功"\n            }\n           //=====以下为远程调用进行项目部署========\n           for(int j=0; j<selectedServers.size(); j++){\n               //每个服务名称\n               def currentServer = selectedServers[j]\n               //添加微服务运行时的参数：spring.profiles.active\n               def activeProfile = "--spring.profiles.active="\n               if(currentServer=="master_server"){\n                    activeProfile = activeProfile+"eureka-server1"\n               }else if(currentServer=="slave_server1"){\n                    activeProfile = activeProfile+"eureka-server2"\n               }\n                sh "echo \'应用部署开始\'"\n                sshPublisher(publishers: [\n                       sshPublisherDesc(configName: "${currentServer}",\n                       transfers: [\n                           sshTransfer(cleanRemote: false,\n                           excludes: \'\',\n                           // 触发的命令，deploy.sh\n                           execCommand: "/opt/jenkins_shell/deployCluster.sh $harbor_url $harbor_project $currentProjectName $tag $currentProjectPort",\n                           execTimeout: 120000,\n                           flatten: false,\n                           makeEmptyDirs: false,\n                           noDefaultExcludes: false,\n                           patternSeparator: \'[ , ]+\',\n                           remoteDirectory: \'\',\n                           remoteDirectorySDF: false,\n                           removePrefix: \'\',\n                           sourceFiles: \'\')\n                       ],\n                       usePromotionTimestamp: false,\n                       useWorkspaceInPromotion: false,\n                       verbose: false)\n                ])\n                sh "echo \'应用部署结束\'"\n            }\n        }\n   }\n\n}\n')])])]),s("p",[a._v('3）在两个生产服务器中 "/opt/jenkins_shell" 目录下加入 "deployCluster.sh" 脚本，并授予执行权限；')]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1628648361824-1628648361791-image-20210811001811353.png",alt:""}})]),a._v(" "),s("p",[a._v("deployCluster.sh")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#! /bin/sh")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#接收外部参数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("harbor_url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("harbor_project_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("project_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$4")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("profile")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$6")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("imageName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$harbor_url")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$harbor_project_name")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$project_name")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$tag")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$imageName")]),a._v('"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查询容器是否存在，存在则删除")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("containerId")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(":$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $1}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$containerId")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#停掉容器")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" stop "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$containerId")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除容器")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$containerId")]),a._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"成功删除容器"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查询镜像是否存在，存在则删除")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("imageId")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" $project_name  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $3}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$imageId")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n      \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除镜像")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$imageId")]),a._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"成功删除镜像"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 登录Harbor")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" login "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" zhuangjie "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" gkmzjaznH21 "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$harbor_url")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 下载镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$imageName")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-di")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$port")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$imageName")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$profile")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"容器启动成功"')]),a._v("\n")])])]),s("p",[a._v("注意：需要修改 Harbor 登录信息。")]),a._v(" "),s("h4",{attrs:{id:"_2、高可用的nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、高可用的nginx"}},[a._v("#")]),a._v(" 2、高可用的nginx")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/1628686966488-1628686966378.png",alt:""}})]),a._v(" "),s("p",[a._v("1）安装Nginx（已完成）")]),a._v(" "),s("p",[a._v("2）配置nginx")]),a._v(" "),s("div",{staticClass:"language-纯文本 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("upstream zuulServer {\n        server 192.168.87.103:10020 weight=1;\n        server 192.168.87.104:10020 weight=1;\n}\nserver {\n        listen       9090;\n        listen       [::]:80;\n        server_name  _;\n        root         /usr/share/nginx/html;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n           proxy_pass http://zuulServer/;\n    }\n...\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);