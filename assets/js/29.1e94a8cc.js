(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{302:function(a,t,s){"use strict";s.r(t);var e=s(10),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"springmvc源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springmvc源码分析"}},[a._v("#")]),a._v(" SpringMVC源码分析")]),a._v(" "),t("h2",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[a._v("#")]),a._v(" 目录")]),a._v(" "),t("h3",{attrs:{id:"_1-进入dodispatcher前"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-进入dodispatcher前"}},[a._v("#")]),a._v(" [_1_] 进入doDispatcher前")]),a._v(" "),t("h3",{attrs:{id:"_2-dodispatcher的执行流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-dodispatcher的执行流程"}},[a._v("#")]),a._v(" [_2_] doDispatcher的执行流程")]),a._v(" "),t("p",[a._v("（1）调用mappedHandler = this.getHandler(processedRequest);  获取能够处理当前请求的执行链 HandlerExecutionChain （handler+拦截器）。")]),a._v(" "),t("p",[a._v("如何获取handler的？会遍历handlerMappings数组，对应的是不同的Mapper对象。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16518867643421651886763638.png",alt:""}})]),a._v(" "),t("p",[a._v("（2）HandlerAdapter ha = this.getHandlerAdapter(mappedHandler.getHandler()); 从执行链中获取handler调用getHandlerAdapter方法获取 HandlerAdapter 。")]),a._v(" "),t("p",[a._v("如何获取的handlerAdapter？会遍历handlerAdapters数组，对应的是不同的adapter对象。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16518930253451651893025237.png",alt:""}})]),a._v(" "),t("p",[a._v("（3）mv = ha.handle(processedRequest, response, mappedHandler.getHandler()); 调用HandlerAdapter 的handle方法去执行那个handler得到ModelAndView。")]),a._v(" "),t("p",[a._v("（4）this.processDispatchResult(processedRequest, response, mappedHandler, mv, (Exception)dispatchException); 调用processDispatchResult方法结合mv完成视图渲染与跳转。")]),a._v(" "),t("h3",{attrs:{id:"_3-九大组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-九大组件"}},[a._v("#")]),a._v(" [_3_] 九大组件 ")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//多部件解析器")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MultipartResolver")]),a._v(" multipartResolver"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//国际化解析器")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocaleResolver")]),a._v(" localeResolver"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//主题解析器")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThemeResolver")]),a._v(" themeResolver"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//处理器映射器组件 ")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HandlerMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" handlerMappings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//处理器适配器组件 ")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HandlerAdapter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" handlerAdapters"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//异常解析器组件")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HandlerExceptionResolver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" handlerExceptionResolvers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//默认视图名转换器组件 ")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RequestToViewNameTranslator")]),a._v(" viewNameTranslator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//flash属性管理组件")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FlashMapManager")]),a._v(" flashMapManager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//视图解析器")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ViewResolver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" viewResolvers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"_4-组件的初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-组件的初始化"}},[a._v("#")]),a._v(" [_4_] 组件的初始化")]),a._v(" "),t("p",[a._v("tomcat启动后，会有事件触发DisplayServlet调用onRefresh 方法，然后进行调用方法进行初始化。")])])}),[],!1,null,null,null);t.default=n.exports}}]);