(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{287:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"kubernetes-实用篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-实用篇"}},[t._v("#")]),t._v(" Kubernetes 实用篇")]),t._v(" "),s("h2",{attrs:{id:"目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),s("h3",{attrs:{id:"_1-1-k8s是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-k8s是什么"}},[t._v("#")]),t._v(" 1.1 k8s是什么？")]),t._v(" "),s("p",[t._v("kubernetes，是一个全新的基于容器技术的分布式架构领先方案，是谷歌严格保密十几年的秘密武器----Borg系统的一个开源版本，于2014年9月发布第一个版本，2015年7月发布第一个正式版本。")]),t._v(" "),s("p",[t._v("kubernetes的本质是"),s("strong",[t._v("一组服务器集群")]),t._v("，它可以在集群的每个节点上运行特定的程序，来对节点中的容器进行管理。目的是实现资源管理的自动化，主要提供了如下的主要功能：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("自我修复")]),t._v("：一旦某一个容器崩溃，能够在1秒中左右迅速启动新的容器")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("弹性伸缩")]),t._v("：可以根据需要，自动对集群中正在运行的容器数量进行调整")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("服务发现")]),t._v("：服务可以通过自动发现的形式找到它所依赖的服务")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("负载均衡")]),t._v("：如果一个服务起动了多个容器，能够自动实现请求的负载均衡")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("版本回退")]),t._v("：如果发现新发布的程序版本有问题，可以立即回退到原来的版本")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("存储编排")]),t._v("：可以根据容器自身的需求自动创建存储卷")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16421394576181642139457590.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-1-k8s解决了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-k8s解决了什么"}},[t._v("#")]),t._v(" 2.1 k8s解决了什么？")]),t._v(" "),s("p",[t._v("在部署应用程序的方式上，主要经历了三个时代：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("传统部署")]),t._v("：互联网早期，会直接将应用程序部署在物理机上")]),t._v(" "),s("blockquote",[s("p",[t._v("优点：简单，不需要其它技术的参与 缺点：不能为应用程序定义资源使用边界，程序之间容易产生影响")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("虚拟化部署")]),t._v("：可以在一台物理机上运行多个虚拟机，每个虚拟机都是独立操作系统")]),t._v(" "),s("blockquote",[s("p",[t._v("优点：程序环境不会相互产生影响，提供了一定程度的安全性"),s("br"),t._v("\n    缺点：增加了操作系统，浪费了部分资源")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("容器化部署")]),t._v("：与虚拟化类似，但是共享了操作系统")]),t._v(" "),s("blockquote",[s("p",[t._v("优点：可以保证每个容器拥有自己的文件系统、CPU、内存、进程空间等，运行应用程序所需要的资源都被容器包装，并和底层基础架构解耦。 容器化的应用程序可以跨云服务商、跨Linux操作系统发行版进行部署")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16421380656271642138065565.png",alt:""}})])])]),t._v(" "),s("p",[t._v("容器化部署方式给带来很多的便利，但是也会出现一些问题，比如说：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("一个容器故障停机了，怎么样让另外一个容器立刻启动去替补停机的容器")])]),t._v(" "),s("li",[s("p",[t._v("当并发访问量变大的时候，怎么样做到横向扩展容器数量")])])]),t._v(" "),s("p",[t._v("这些容器管理的问题统称为"),s("strong",[t._v("容器编排")]),t._v("问题，为了解决这些容器编排问题，就产生了一些容器编排的软件：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Swarm")]),t._v("：Docker自己的容器编排工具")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Mesos")]),t._v("：Apache的一个资源统一管控的工具，需要和Marathon结合使用")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Kubernetes")]),t._v("：Google开源的的容器编排工具")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16421386472321642138647220.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_3-1-k8s基本原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-k8s基本原理是什么"}},[t._v("#")]),t._v(" 3.1 k8s基本原理是什么？")]),t._v(" "),s("h4",{attrs:{id:"_1-整体说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-整体说明"}},[t._v("#")]),t._v(" 1）整体说明")]),t._v(" "),s("p",[t._v("一个kubernetes集群主要是由"),s("strong",[t._v("控制节点(master)")]),t._v("、**工作节点(node) **构成，每个节点上都会安装不同的组件。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16421404957881642140495772.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("master：集群的控制平面，负责集群的决策 ( 管理 )")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("ApiServer")]),t._v(" : 资源操作的唯一入口，接收用户输入的命令，提供认证、授权、API注册和发现等机制")])]),t._v(" "),s("p",[s("strong",[t._v("Scheduler")]),t._v(" : 负责集群资源调度，按照预定的调度策略将Pod调度到相应的node节点上")]),t._v(" "),s("p",[s("strong",[t._v("ControllerManager")]),t._v(" : 负责维护集群的状态，比如程序部署安排、故障检测、自动扩展、滚动更新等")]),t._v(" "),s("p",[s("strong",[t._v("Etcd")]),t._v(" ：负责存储集群中各种资源对象的信息")]),t._v(" "),s("p",[s("strong",[t._v("node：集群的数据平面，负责为容器提供运行环境 ( 干活 )")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Kubelet")]),t._v(" : 负责维护容器的生命周期，即通过控制docker，来创建、更新、销毁容器")])]),t._v(" "),s("p",[s("strong",[t._v("KubeProxy")]),t._v(" : 负责提供集群内部的服务发现和负载均衡")]),t._v(" "),s("p",[s("strong",[t._v("Docker")]),t._v(" : 负责节点上容器的各种操作")]),t._v(" "),s("p",[t._v("下面，以部署一个nginx服务来说明kubernetes系统各个组件调用关系：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16421411944631642141194434.png",alt:""}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先要明确，一旦kubernetes环境启动之后，master和node都会将自身的信息存储到etcd数据库中")])]),t._v(" "),s("li",[s("p",[t._v("一个nginx服务的安装请求会首先被发送到master节点的apiServer组件")])]),t._v(" "),s("li",[s("p",[t._v("apiServer组件会调用scheduler组件来决定到底应该把这个服务安装到哪个node节点上")]),t._v(" "),s("p",[t._v("在此时，它会从etcd中读取各个node节点的信息，然后按照一定的算法进行选择，并将结果告知apiServer")])]),t._v(" "),s("li",[s("p",[t._v("apiServer调用controller-manager去调度Node节点安装nginx服务")])]),t._v(" "),s("li",[s("p",[t._v("kubelet接收到指令后，会通知docker，然后由docker来启动一个nginx的pod")]),t._v(" "),s("p",[t._v("pod是kubernetes的最小操作单元，容器必须跑在pod中至此，")])]),t._v(" "),s("li",[s("p",[t._v("一个nginx服务就运行了，如果需要访问nginx，就需要通过kube-proxy来对pod产生访问的代理")])])]),t._v(" "),s("p",[t._v("这样，外界用户就可以访问集群中的nginx服务了")]),t._v(" "),s("h4",{attrs:{id:"_2-组件的整体说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件的整体说明"}},[t._v("#")]),t._v(" 2）组件的整体说明：")]),t._v(" "),s("p",[s("strong",[t._v("Master")]),t._v("：集群控制节点，每个集群需要至少一个master节点负责集群的管控")]),t._v(" "),s("p",[s("strong",[t._v("Node")]),t._v("：工作负载节点，由master分配容器到这些node工作节点上，然后node节点上的docker负责容器的运行")]),t._v(" "),s("p",[s("strong",[t._v("Pod")]),t._v("：kubernetes的最小控制单元，容器都是运行在pod中的，一个pod中可以有1个或者多个容器")]),t._v(" "),s("p",[s("strong",[t._v("Controller")]),t._v("：控制器，通过它来实现对pod的管理，比如启动pod、停止pod、伸缩pod的数量等等")]),t._v(" "),s("p",[s("strong",[t._v("Service")]),t._v("：pod对外服务的统一入口，下面可以维护者同一类的多个pod")]),t._v(" "),s("p",[s("strong",[t._v("Label")]),t._v("：标签，用于对pod进行分类，同一类pod会拥有相同的标签")]),t._v(" "),s("p",[s("strong",[t._v("NameSpace")]),t._v("：命名空间，用来隔离pod的运行环境")]),t._v(" "),s("h4",{attrs:{id:"_3-pod间的通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-pod间的通信"}},[t._v("#")]),t._v(" 3）Pod间的通信")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16417074828361641707482793.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_4-1-k8s如何学"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-k8s如何学"}},[t._v("#")]),t._v(" 4.1 k8s如何学？")]),t._v(" "),s("h4",{attrs:{id:"_1-环境的搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-环境的搭建"}},[t._v("#")]),t._v(" 1）环境的搭建")]),t._v(" "),s("p",[t._v("—1—")]),t._v(" "),s("p",[s("strong",[t._v("搭建虚拟机")])]),t._v(" "),s("p",[s("a",{attrs:{href:"http://mirrors.ustc.edu.cn/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso",title:"下载镜像",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载镜像"),s("OutboundLink")],1),t._v(" > "),s("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16460272220511646027221153.png",title:"安装虚拟机（三台：k8s-master、k8s-node01、k8s-node02）",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装虚拟机（三台：k8s-master、k8s-node01、k8s-node02）"),s("OutboundLink")],1),t._v("> "),s("a",{attrs:{href:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16460273585281646027358429.png",title:"并设置虚拟主机ip为静态ip",target:"_blank",rel:"noopener noreferrer"}},[t._v("并设置虚拟主机ip为静态ip"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("k8s-master01@192.168.109.100、k8s-node01@192.168.109.101、k8s-node02@192.168.109.102")])]),t._v(" "),s("p",[t._v("—2—")]),t._v(" "),s("p",[s("strong",[t._v("必须环境 （全节点）")])]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install vim wget -y    #安装必要软件\ncat /etc/redhat-release   #查看版本，版本不要小于Centos Linux 7.5.1804 (Core) 这个版本\ncat &lt;&lt;EOF >> /etc/hosts   # 主机名成解析 编辑三台服务器的/etc/hosts文件，添加下面内容\n192.168.109.100 k8s-master\n192.168.109.101 k8s-node01\n192.168.109.102 k8s-node02\nEOF\n#kubernetes要求集群中的节点时间必须精确一直，这里使用chronyd服务从网络同步时间\nsystemctl start chronyd\nsystemctl enable chronyd\nyum install ntpdate -y\nntpdate ntp.aliyun.com\ndate\n# 1 关闭firewalld服务\nsystemctl stop firewalld\nsystemctl disable firewalld\n# 2 关闭iptables服务\nsystemctl stop iptables\nsystemctl disable iptables\n#  禁用selinux：编辑 /etc/selinux/config 文件，修改SELINUX的值为disable\nsed -i '/SELINUX/s/enforcing/disable/g' /etc/selinux/config\n#禁用swap：编辑分区配置文件/etc/fstab，注释掉swap分区一行\nsed -i '/swap/s/^\\//\\#\\//' /etc/fstab\nswapoff -a  #临时关闭，否则master初始化报错\n#修改linux的内核参数\n# 修改linux的内核采纳数，添加网桥过滤和地址转发功能\n# 编辑/etc/sysctl.d/kubernetes.conf文件，添加如下配置：\ncat &lt;&lt;EOF > /etc/sysctl.d/kubernetes.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\nsysctl -p  #重新加载\nmodprobe br_netfilter  # 加载网桥过滤模块\nlsmod | grep br_netfilter  # 查看网桥过滤模块是否加载成功\n# 1.安装ipset和ipvsadm\nyum install ipset ipvsadmin -y\n# 2.添加需要加载的模块写入脚本文件\ncat &lt;&lt;EOF> /etc/sysconfig/modules/ipvs.modules\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\nEOF\n# 3.为脚本添加执行权限\nchmod +x /etc/sysconfig/modules/ipvs.modules\n# 4.执行脚本文件\n/bin/bash /etc/sysconfig/modules/ipvs.modules\n# 5.查看对应的模块是否加载成功\nlsmod | grep -e ip_vs -e nf_conntrack_ipv4\n\n")])])]),s("p",[s("strong",[t._v("—3—")])]),t._v(" "),s("p",[s("strong",[t._v("安装Docker （全节点）")])]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 1、切换镜像源\nwget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo\n# 2、查看当前镜像源中支持的docker版本\nyum list docker-ce --showduplicates\n# 3、安装特定版本的docker-ce\n# 必须制定--setopt=obsoletes=0，否则yum会自动安装更高版本\nyum install --setopt=obsoletes=0 docker-ce-18.06.3.ce-3.el7 -y\n# 4、添加一个配置文件\n#Docker 在默认情况下使用Vgroup Driver为cgroupfs，而Kubernetes推荐使用systemd来替代cgroupfs\nmkdir /etc/docker\ncat &lt;&lt;EOF> /etc/docker/daemon.json\n{\n  "exec-opts": ["native.cgroupdriver=systemd"],\n  "registry-mirrors": ["https://kn0t2bca.mirror.aliyuncs.com"]\n}\nEOF\n#启动&amp;设置自启动docker\nsystemctl restart docker\nsystemctl enable docker\n\n')])])]),s("p",[s("strong",[t._v("—4—")])]),t._v(" "),s("p",[s("strong",[t._v("安装k8s （全节点）")])]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 1、由于kubernetes的镜像在国外，速度比较慢，这里切换成国内的镜像源\ncat &lt;&lt;EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\nyum install --setopt=obsoletes=0 kubeadm-1.17.4-0 kubelet-1.17.4-0 kubectl-1.17.4-0 -y\n#编辑/etc/sysconfig/kubelet, 添加下面的配置\ncat &lt;&lt;EOF >> /etc/sysconfig/kubelet\nKUBELET_CGROUP_ARGS="--cgroup-driver=systemd"\nKUBE_PROXY_MODE="ipvs"\nEOF\n# 5、设置kubelet开机自启\nsystemctl enable kubelet\n\n')])])]),s("p",[s("strong",[t._v("这是卸载！")])]),t._v(" "),s("p",[s("strong",[t._v("这是卸载！")])]),t._v(" "),s("p",[s("strong",[t._v("这是卸载！")]),t._v("！！，别安装就卸载了！！")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这是卸载k8s的命令")]),t._v("\nkubeadm reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v("\nmodprobe "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" ipip\nlsmod\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" ~/.kube/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /etc/kubernetes/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /etc/systemd/system/kubelet.service.d\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /etc/systemd/system/kubelet.service\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /usr/bin/kube*\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /etc/cni\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /opt/cni\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /var/lib/etcd\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /var/etcd\nyum clean all\nyum remove kube*\n")])])]),s("p",[s("strong",[t._v("—5—")])]),t._v(" "),s("p",[s("strong",[t._v("master节点的初始化 （master节点）")])]),t._v(" "),s("p",[t._v("查看开机是否自动连接网络：")]),t._v(" "),s("p",[t._v("nmtui  #进入网络配置")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16457066649591645706663670.png",alt:""}})]),t._v(" "),s("p",[t._v("reboot  #将主机重启，然后 >>")]),t._v(" "),s("ul",[s("li",[t._v("master的初始化：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在安装kubernetes集群之前，必须要提前准备好集群需要的镜像，所需镜像可以通过下面命令查看")]),t._v("\nkubeadm config images list\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此镜像kubernetes的仓库中，由于网络原因，无法连接，下面提供了一种替换方案")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("images")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  kube-apiserver:v1.17.4\n  kube-controller-manager:v1.17.4\n  kube-scheduler:v1.17.4\n  kube-proxy:v1.17.4\n  pause:3.1\n  etcd:3.4.3-0\n  coredns:1.6.5\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("imageName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${images"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v(" k8s.gcr.io/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" rmi registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看下载好的镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始初始化")]),t._v("\nkubeadm init "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --apiserver-advertise-address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.100 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --kubernetes-version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("v1.17.4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --service-cidr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.0/12 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --pod-network-cidr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.244")]),t._v(".0.0/16 \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始化 ，本质就是安装需要的组件的过程（可能要修改两处，版本与192.168.87.101）,特别感谢:https://blog.csdn.net/weixin_41831919/article/details/119790356")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始化失败？ 运行：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm reset ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf $HOME/.kube/config  & rm -rf $HOME/.kube; ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf /etc/cni/net.d   & ipvsadm --clear  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#再执行初始化命令 ")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("初始化完成后的输出需要保存：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Your Kubernetes control-plane has initialized successfully"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" /etc/kubernetes/admin.conf "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubectl apply -f [podnetwork].yaml"')]),t._v(" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" any number of worker nodes by running the following on each as root:\n\nkubeadm "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.100:6443 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--token")]),t._v(" fdfhpj.3pb3f3b2a0tzl68s "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --discovery-token-ca-cert-hash sha256:cd7c2b09cf97a1f0083c4463fc51de07957561c43bb99068e89dd658114940a8\n    \n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重新生成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm token create")]),t._v("\n424mp7.nkxx07p940mkl2nd\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'")]),t._v("\nd88fb55cb1bd659023b11e61052b39bbfe99842b0636574a16c76df186fd5e0d\n")])])]),s("p",[s("strong",[t._v("—6—")])]),t._v(" "),s("p",[s("strong",[t._v("master机器，执行上面输出的“三行命令”，让master机器可以操作k8s集群：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" /etc/kubernetes/admin.conf "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n")])])]),s("p",[s("strong",[t._v("—7—")])]),t._v(" "),s("p",[s("strong",[t._v("node节点注册到master")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意其它节点加进来，需要拉取上面的组件，再注册进来。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("images")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  kube-apiserver:v1.17.4\n  kube-controller-manager:v1.17.4\n  kube-scheduler:v1.17.4\n  kube-proxy:v1.17.4\n  pause:3.1\n  etcd:3.4.3-0\n  coredns:1.6.5\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("imageName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${images"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v(" k8s.gcr.io/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" rmi registry.cn-hangzhou.aliyuncs.com/google_containers/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$imageName")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#然后使用上面的链接注册进来，如果想要在node节点上操作集群，需要执行初始化后的那三个命令")]),t._v("\nkubeadm "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.100:6443 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--token")]),t._v(" fdfhpj.3pb3f3b2a0tzl68s "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --discovery-token-ca-cert-hash sha256:cd7c2b09cf97a1f0083c4463fc51de07957561c43bb99068e89dd658114940a8\n\n")])])]),s("p",[s("strong",[t._v("—8—")])]),t._v(" "),s("p",[s("strong",[t._v("安装网络插件")])]),t._v(" "),s("p",[t._v("网络插件，也是pod,  解决NoReady 是因为网络插件还没有安装")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16441258998881644125899132.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##删除插件 kubectl delete -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm reset  重置集群环境  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参考：https:/blog.csdn.net/qq_43158436/article/details/108583757")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# master 重置环境时要删除一些东西  https://blog.csdn.net/woay2008/article/details/93250137")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新启动 tgsystemctl restart kubelet")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参考： https://blog.csdn.net/qq_41813208/article/details/108625419       ")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2-操作前扫盲"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-操作前扫盲"}},[t._v("#")]),t._v(" 2）操作前扫盲")]),t._v(" "),s("p",[t._v("我们操作集群，都是操作集群中的资源，即对资源进行“增删改查”，以下是我们学习的重点资源：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("资源分类")]),t._v(" "),s("th",[t._v("资源名称")]),t._v(" "),s("th",[t._v("缩写")]),t._v(" "),s("th",[t._v("资源作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("集群级别资源")]),t._v(" "),s("td",[t._v("nodes")]),t._v(" "),s("td",[t._v("no")]),t._v(" "),s("td",[t._v("集群组成部分")])]),t._v(" "),s("tr",[s("td",[t._v("namespaces")]),t._v(" "),s("td",[t._v("ns")]),t._v(" "),s("td",[t._v("隔离Pod")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("pod资源")]),t._v(" "),s("td",[t._v("pods")]),t._v(" "),s("td",[t._v("po")]),t._v(" "),s("td",[t._v("装载容器")])]),t._v(" "),s("tr",[s("td",[t._v("pod资源控制器")]),t._v(" "),s("td",[t._v("replicationcontrollers")]),t._v(" "),s("td",[t._v("rc")]),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("replicasets")]),t._v(" "),s("td",[t._v("rs")]),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("deployments")]),t._v(" "),s("td",[t._v("deploy")]),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("daemonsets")]),t._v(" "),s("td",[t._v("ds")]),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("jobs")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("cronjobs")]),t._v(" "),s("td",[t._v("cj")]),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("horizontalpodautoscalers")]),t._v(" "),s("td",[t._v("hpa")]),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("statefulsets")]),t._v(" "),s("td",[t._v("sts")]),t._v(" "),s("td",[t._v("控制pod资源")])]),t._v(" "),s("tr",[s("td",[t._v("服务发现资源")]),t._v(" "),s("td",[t._v("services")]),t._v(" "),s("td",[t._v("svc")]),t._v(" "),s("td",[t._v("统一pod对外接口")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("ingress")]),t._v(" "),s("td",[t._v("ing")]),t._v(" "),s("td",[t._v("统一pod对外接口")])]),t._v(" "),s("tr",[s("td",[t._v("存储资源")]),t._v(" "),s("td",[t._v("volumeattachments")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("存储")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("persistentvolumes")]),t._v(" "),s("td",[t._v("pv")]),t._v(" "),s("td",[t._v("存储")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("persistentvolumeclaims")]),t._v(" "),s("td",[t._v("pvc")]),t._v(" "),s("td",[t._v("存储")])]),t._v(" "),s("tr",[s("td",[t._v("配置资源")]),t._v(" "),s("td",[t._v("configmaps")]),t._v(" "),s("td",[t._v("cm")]),t._v(" "),s("td",[t._v("配置")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("secrets")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("配置")])])])]),t._v(" "),s("blockquote",[s("p",[t._v('精辟：我知道上面你是不会认真看的，所以我简要说一下，namespace简称ns，用来隔离pod，比如生产环境pro，与开发环境的dev，你就可以设置这两个ns，又比如k8s在初始化时安装的系统组件，就放在了"kube-system" ns上。 pod就像我们主机一样，pod就是容器（应用,比如nginx），比如我们在pod上部署了两个程序，nginx与tomcat，那么我们就可以在集群上通过pod的ip+程序端口 进行访问了。 deployment简称deploy，比如有几个nginx程序,他们是可以互相替换的，就像银行的窗口，窗口1可以取钱，窗口2也可以，人多了我们可以开多个窗口，人少了就关掉一些窗口，怎么控制呢这一组相同的pod呢，那就需要deploy了，怎么知道deploy要管理哪些pod呢，我们可以在创建pod时指定标签, 而创新deploy时指定要管理哪些标签，注意这些标签是可以有多个的。deploy可以管理pod，当pod宕机，超过pod给定的资源时deploy就会进行重启等操作，即让pod迅速达到期望的值。所以在实际中，我们比较少直接创建一个pod，而是让deploy进行创建，即我们在创新deploy时指定要管理的标签，pod的模板，pod的期望个数等参数，创建后，deploy看管理的pod是0个，那么它马上按指定的pod模板进行创建出期望的个数，deploy的功能还不止于此，我们可以配置deploy，当有大量的请求使pod指定的cpu或内存占用超过指定的值时，就会进行自动创建，来分配压力，当然你可以指定最多的pod个数，当过了高峰时，deploy不会当时就杀掉我们之前多创建出来的pod，而是过了一段时间后，以免返峰。service简称svc，我们在学习k8s时最想不开的是这么多pod是如何让外面访问的了，其实很简单，只要我们向外界暴露了管理pod的deploy不就行了嘛，而deploy让哪个pod去顶，那就需要我们配置了，通过配置后，deploy就以轮询的方式让pod去顶了, 当然轮询只是其中一种。')])]),t._v(" "),s("p",[t._v("操作资源的方式以下几种：")]),t._v(" "),s("ul",[s("li",[t._v("命令式对象管理：直接使用命令去操作kubernetes资源，简单操作使用这个就很方便，但是用来创建资源是推荐的。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("kubectl run nginx-pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--image")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx:1.17.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),s("ul",[s("li",[t._v("对象配置：通过命令配置和配置文件去操作kubernetes资源")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是创建还是删除还是其它操作，自行指定")]),t._v("\nkubectl create/patch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" nginx-pod.yaml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明式，对存在的资源进行创建操作，对已存在的资源进行更新操作")]),t._v("\nkubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" nginx-pod.yaml\n")])])]),s("p",[t._v("上面所说的配置文件，是用yaml的，因为yaml更注重它强调以数据为中心，并不是以标识语言为重点。")]),t._v(" "),s("h4",{attrs:{id:"_3-kubectl命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-kubectl命令"}},[t._v("#")]),t._v(" 3）kubectl命令")]),t._v(" "),s("p",[t._v("kubectl是kubernetes集群的命令行工具，通过它能够对集群本身进行管理，并能够在集群上进行容器化应用的安装部署。kubectl命令的语法如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("kubectl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("comand")]),t._v("：指定要对资源执行的操作，例如create、get、delete")]),t._v(" "),s("p",[s("strong",[t._v("type")]),t._v("：指定资源类型，比如deployment、pod、service")]),t._v(" "),s("p",[s("strong",[t._v("name")]),t._v("：指定资源的名称，名称大小写敏感")]),t._v(" "),s("p",[s("strong",[t._v("flags")]),t._v("：指定额外的可选参数")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("kubectl get ns  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看有哪些名称空间ns")]),t._v("\nkubectl create ns dev "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建一个名为dev的名称空间")]),t._v("\nkubectl get pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看ns为dev中的pod")]),t._v("\nkubectl get pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" wide "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看更为详细的ns为dev中的pod信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在ns为dev的名称空间上创建一个名为nginx的pod，运行nginx:1.17.1 ，暴露80端口")]),t._v("\nkubectl run nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--image")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx:1.17.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\nkubectl delete pod nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除ns为dev中名为nginx的pod")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在ns为dev的名称空间中创建一个deploy ,名为nginx，使用的image是nginx:1.17.1 , 有3个副本")]),t._v("\nkubectl create deploy nginx  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--image")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx:1.17.1  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--replicas")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#暴露ns为dev的deploy名为nginx，暴露pod中的80，集群访问用80，而外部这里没有指定，是在一定的范围内生成一个作为访问端口")]),t._v("\nkubectl expose deploy nginx  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" --target-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NodePort "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看ns为dev的pod与svc资源")]),t._v("\nkubectl get pod,svc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看pod日记输出")]),t._v("\nkubectl logs  gateway-0  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" gateway  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#加 -f 持续输出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入容器")]),t._v("\nkubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" gateway-0  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" default  /bin/sh\n")])])]),s("h4",{attrs:{id:"_4-使用配置文件的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用配置文件的方式"}},[t._v("#")]),t._v(" 4）使用配置文件的方式")]),t._v(" "),s("p",[t._v("我们需要通过写"),s("code",[t._v("yaml")]),t._v(" 文件，来操作我们的资源，写好后我们可以：")]),t._v(" "),s("p",[t._v("kubectl apply -f  <文件名>.yaml  ")]),t._v(" "),s("p",[t._v("kubectl create/delete -f  <文件名>.yaml  ")]),t._v(" "),s("p",[t._v("来创建、更新、删除k8s资源。")]),t._v(" "),s("p",[t._v("那我们如何写配置文件呢？我们可以通过 "),s("code",[t._v("kubectl explain pod")]),t._v(" 命令查看资源的配置项，还可以查看指定资源更详细的信息，比如"),s("code",[t._v("kubectl explain pod.spec...")]),t._v(" 查看。")]),t._v(" "),s("h4",{attrs:{id:"pod资源yaml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod资源yaml"}},[t._v("#")]),t._v(" ——pod资源yaml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，版本号，例如v1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod       　 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，资源类型，例如 Pod")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，元数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Pod所属的命名空间,默认为"default"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自定义标签列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　          \n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器的详细定义")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器列表")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器名称")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器的镜像名称")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Always"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("Never"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("IfNotPresent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取镜像的策略 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令参数列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workingDir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的工作目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#挂载到容器内部的存储卷配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储卷在容器内mount的绝对路径，应少于512字符")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" boolean "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否为只读模式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#需要暴露的端口库号列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口的名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器需要监听的端口号")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器所在主机需要监听的端口号，默认与Container相同")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口协议，支持TCP和UDP，默认TCP")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器运行前需设置的环境变量列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量的值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制和请求的设置")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制的设置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源请求的设置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu请求，容器启动的初始可用数量")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存请求,容器启动的初始可用数量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#生命周期钩子")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动后立即执行此钩子,如果执行失败,会根据重启策略进行重启")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器终止前执行此钩子,无论结果如何,容器都会终止")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内各容器健康检查的设置，当探测无响应几次后将自动重启该容器")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod容器内检查方式设置为exec方式")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#exec方式需要制定的命令或脚本")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("HttpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方式设置为tcpSocket方式")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动完成后首次探测的时间，单位为秒")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0    　　    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0     　　    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("successThreshold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureThreshold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" OnFailure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod的重启策略")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeName表示将该Pod调度到指定到名称的node节点上")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obeject "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeSelector表示将该Pod调度到包含这个label的node上")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pull镜像时使用的secret名称，以key：secretkey格式指定")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostNetwork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在该pod上定义共享存储卷列表")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享存储卷名称 （volumes类型有很多种）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string      　　        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod所在宿主机的目录，将被用于同期中mount的目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       　　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为secret的存储卷，挂载集群与定义的secret对象到容器内部")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scretname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n")])])]),s("p",[t._v("常用模板：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("imagepullpolicy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定调度到node1节点上，还有亲和性，这里不就不写出了")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initContainers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始化容器")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mysql\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sh'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'until ping 192.168.90.14 -c 1 ; do echo waiting for mysql...; sleep 2; done;'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("redis\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sh'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'until ping 192.168.90.15 -c 1 ; do echo waiting for reids...; sleep 2; done;'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于设置镜像拉取策略")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置容器暴露的端口列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源配额")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制资源（上限）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Gi"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制,可以使用Gi、Mi、G、M等形式")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求资源（下限）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU限制，单位是core数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10Mi"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touch /tmp/hello.txt;while true;do /bin/echo $(date +%T) >> /tmp/hello.txt; sleep 3; done;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置环境变量列表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v("\n")])])]),s("h4",{attrs:{id:"pod控制器yaml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod控制器yaml"}},[t._v("#")]),t._v(" ——pod控制器yaml")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16452534495631645253449474.png",alt:""}})]),t._v(" "),s("p",[t._v("pod控制器有是用来管理pod的，ReplicaSet简称RS也是控制器，Deployment简称deploy也是控制器。")]),t._v(" "),s("p",[s("strong",[t._v("Deployment的资源清单文件：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类型       ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rs名称 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属命名空间 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详情描述")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 副本数量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("revisionHistoryLimit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保留历史版本")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paused")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂停部署，默认是false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("progressDeadlineSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署超时时间（s），默认是600")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 策略")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RollingUpdate "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新策略")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rollingUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxSurge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30% "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最大额外可以存在的副本数，可以为百分比，也可以为整数")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxUnavailable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30% "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最大不可用状态的 Pod 的最大值，可以为百分比，也可以为整数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择器，通过它指定该控制器管理哪些pod")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Labels匹配规则")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Expressions匹配规则")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模板，当副本数量不足时，会根据下面的模板创建pod副本")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),s("p",[t._v("常用模板：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment      \n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新策略：重建更新、滚动更新（先更新一部分）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RollingUpdate "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 滚动更新策略")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rollingUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxSurge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25% \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxUnavailable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25%\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n")])])]),s("ul",[s("li",[s("p",[t._v("副本扩缩：kubectl edit deploy pc-deployment -n dev")])]),t._v(" "),s("li",[s("p",[t._v("版本更新：")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看之前版本，可回退版本")]),t._v("\nkubectl rollout status deploy pc-deployment "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回退到指定版本  ")]),t._v("\nkubectl rollout undo deployment pc-deployment --to-revision"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n")])])]),s("ul",[s("li",[t._v("金丝雀发布 ")])]),t._v(" "),s("p",[t._v("属于滚动发布，就是在滚动发布未完成时就暂停的过程，观察能否稳定地按期望的方式运行。确定没问题之后再继续完成余下的Pod资源滚动更新，否则立即回滚更新操作。这就是所谓的金丝雀发布。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#升级到指定版本，然后立即暂停")]),t._v("\nkubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" image deploy pc-deployment "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("nginx")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx:1.17.4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" kubectl rollout pause deployment pc-deployment  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#观察~")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#继续更新")]),t._v("\nkubectl rollout resume deploy pc-deployment "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n\n")])])]),s("ul",[s("li",[t._v("[重要] Horizontal Pod Autoscaler(HPA) 控制器")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/16453509289621645350928841.png",alt:""}})]),t._v(" "),s("p",[t._v("HPA可以获取每个Pod利用率，然后和HPA中定义的指标进行对比，同时计算出需要伸缩的具体值，最后实现Pod的数量的调整。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装metrics-server")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" v0.3.6 https://github.com/kubernetes-incubator/metrics-server\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /root/metrics-server/deploy/1.8+/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" metrics-server-deployment.yaml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置点：")]),t._v("\nhostNetwork: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nimage: registry.cn-hangzhou.aliyuncs.com/google_containers/metrics-server-amd64:v0.3.6\nargs:\n- --kubelet-insecure-tls\n- --kubelet-preferred-address-types"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP\n\n")])])]),s("p",[s("img",{attrs:{src:"image/image_AciAJaiIPB.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" ./\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看metrics-server 是否在运行")]),t._v("\nkubectl get pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kube-system\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看node 占用资源")]),t._v("\nkubectl "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看pod 占用资源")]),t._v("\nkubectl "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kube-system\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 至此,metrics-server安装完成")]),t._v("\n  \n\n")])])]),s("p",[t._v("vim hpa-nginx.yaml   ")]),t._v(" "),s("blockquote",[s("p",[t._v("创建指定的deploy的HPA, 下面的deploy为nginx，当cpu使用率超过3%时，就会创建pod副本，副本最多是10个，最少1个")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" autoscaling/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HorizontalPodAutoscaler\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hpa\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最小pod数量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最大pod数量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetCPUUtilizationPercentage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU使用率指标")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scaleTargetRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定要控制的nginx信息")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n")])])]),s("p",[t._v("kubectl create -f hpa-nginx.yaml  ")]),t._v(" "),s("p",[t._v("测试：我们可以使用测压工具，如 "),s("code",[t._v("JMeter")]),t._v(" 进行测试。")]),t._v(" "),s("p",[t._v("查看hpa上显示的资源占用：")]),t._v(" "),s("p",[t._v("kubectl get hpa -n dev -w")]),t._v(" "),s("h4",{attrs:{id:"service-yaml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-yaml"}},[t._v("#")]),t._v(" ——Service yaml")]),t._v(" "),s("p",[t._v("实现对pod的暴露。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/02/26/20220226003143515.png",alt:""}})]),t._v(" "),s("p",[t._v("模式：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("userspace 模式：虽然比较稳定，但是效率比较低。")])]),t._v(" "),s("li",[s("p",[t._v("iptables 模式：较userspace模式效率更高，但不能提供灵活的LB策略，当后端Pod不可用时也无法进行重试。")])]),t._v(" "),s("li",[s("p",[t._v("ipvs 模式：ipvs相对iptables转发效率更高。除此以外，ipvs支持更多的LB算法。")])])]),t._v(" "),s("p",[t._v("开启ipvs模式：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此模式必须安装ipvs内核模块，否则会降级为iptables")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启ipvs")]),t._v("\nkubectl edit cm kube-proxy "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kube-system  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## 修改mode: "ipvs"')]),t._v("\nkubectl delete pod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v(" k8s-app"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kube-proxy "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kube-system\nipvsadm "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Ln")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当有规则信息时，说明生效了")]),t._v("\n\n")])])]),s("p",[t._v("Service 类型：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ClusterIP：默认值，只能在集群内部访问")])]),t._v(" "),s("li",[s("p",[t._v("NodePort："),s("strong",[t._v("就可以在集群外部访问服务")])])]),t._v(" "),s("li",[s("p",[t._v("LoadBalancer：使用外接负载均衡器完成到服务的负载分发，注意此模式需要外部云环境支持")])]),t._v(" "),s("li",[s("p",[t._v("ExternalName： 把集群外部的服务引入集群内部，直接使用")])])]),t._v(" "),s("p",[t._v("Service的yaml配置： ")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命名空间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 描述")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 标签选择器，用于确定当前service代理哪些pod")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Service类型，指定service的访问方式")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟服务的ip地址")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sessionAffinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# session亲和性，支持ClientIP、None两个选项")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口信息")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3017")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service端口")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5003")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod端口")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31122")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主机端口")]),t._v("\n")])])]),s("p",[s("strong",[t._v("ClusterIP")]),t._v(" 类型Service yaml配置：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("clusterip\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.97.97.97 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service的ip地址，如果不写，默认会生成一个")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Service端口       ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod端口")]),t._v("\n")])])]),s("p",[t._v("操作：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master01 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create -f service-clusterip.yaml")]),t._v("\nservice/service-clusterip created\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-master01 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get svc -n dev -o wide")]),t._v("\nNAME                TYPE        CLUSTER-IP    EXTERNAL-IP   PORT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   AGE   SELECTOR\nservice-clusterip   ClusterIP   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.97")]),t._v(".97.97   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/TCP    13s   "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx-pod\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我们可以通过上面的 10.97.97.97:80 在集群上访问了")]),t._v("\n")])])]),s("p",[t._v("**NodePort **类型 Service yaml配置：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeport\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePort "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service类型")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30002")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定绑定的node的端口(默认的取值范围是：30000-32767), 如果不指定，会默认分配")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),s("p",[t._v("我们就可以通过去访问集群中任意一个nodeip的30002端口，即可访问到pod。")]),t._v(" "),s("h4",{attrs:{id:"_5-数据存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-数据存储"}},[t._v("#")]),t._v(" 5）数据存储")]),t._v(" "),s("h4",{attrs:{id:"基本存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本存储"}},[t._v("#")]),t._v(" ——基本存储")]),t._v(" "),s("p",[t._v("基本存储的类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("EmptyDir")])]),t._v(" "),s("li",[s("p",[t._v("HostPath")])]),t._v(" "),s("li",[s("p",[t._v("NFS：NFS是一个网络文件存储系统，可以搭建一台NFS服务器，然后将Pod中的存储直接连接到NFS系统上，这样的话，无论Pod在节点上怎么转移，只要Node跟NFS的对接没问题，数据就可以成功访问。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/02/26/20220226150004128.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#首先要准备nfs的服务器，这里为了简单，直接是master节点做nfs服务器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接下来是master节点的操作")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nfs-utils "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /root/data/nfs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-pv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#准备一个共享目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将共享目录以读写权限暴露给192.168.5.0/24网段中的所有主机")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/exports "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#追加下面一行信息")]),t._v("\n/root/data/nfs     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.0/24"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsystemctl restart nfs "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动nfs服务")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接下来是node节点操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接下来，要在的每个node节点上都安装下nfs，这样的目的是为了node节点可以驱动nfs设备")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在node上安装nfs服务，注意不需要启动")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nfs-utils "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n\n\n")])])]),s("p",[t._v("接下来，我们就可以创建pod，来使用nfs了, 即可以让pod 当作某个目录来使用，而文件保存在nfs的主机上。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nfs\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log/nginx\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tail -f /logs/access.log"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /logs\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nfs服务器地址")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/nfs "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享文件路径")]),t._v("\n")])])]),s("h4",{attrs:{id:"高级存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级存储"}},[t._v("#")]),t._v(" ——高级存储")]),t._v(" "),s("p",[t._v("这里我们需要用到"),s("code",[t._v("基本存储")]),t._v("搭建的NFS服务器, 为了能够屏蔽底层存储实现的细节，方便用户使用， kubernetes引入PV和PVC两种资源对象。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("PV（Persistent Volume）是持久化卷的意思，是对底层的共享存储的一种抽象。一般情况下PV由kubernetes管理员进行创建和配置，它与底层具体的共享存储技术有关，并通过插件完成与共享存储的对接。")]),t._v(" "),s("p",[s("strong",[t._v("状态（status）")])]),t._v(" "),s("p",[t._v("一个 PV 的生命周期中，可能会处于4中不同的阶段：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Available（可用）： 表示可用状态，还未被任何 PVC 绑定")])]),t._v(" "),s("li",[s("p",[t._v("Bound（已绑定）： 表示 PV 已经被 PVC 绑定")])]),t._v(" "),s("li",[s("p",[t._v("Released（已释放）： 表示 PVC 被删除，但是资源还未被集群重新声明")])]),t._v(" "),s("li",[s("p",[t._v("Failed（失败）： 表示该 PV 的自动回收失败")])])])]),t._v(" "),s("li",[s("p",[t._v("PVC（Persistent Volume Claim）是资源的申请，用来声明对存储空间、访问模式、存储类别需求信息。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/02/26/20220226150009412.png",alt:""}})]),t._v(" "),s("p",[t._v("开始实验：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建三个目录，将创建三个pv分配使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /root/data/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("pv1,pv2,pv3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-pv")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暴露")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/exports\n/root/data/pv1     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.0/24"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/root/data/pv2     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.0/24"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n/root/data/pv3     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".109.0/24"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw,no_root_squash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启服务")]),t._v("\nsystemctl restart nfs\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始创建三个pv")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" pv.yaml\n\n")])])]),s("p",[t._v("pv.yaml：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  pv1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  pv2\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2Gi\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv2\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  pv3\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3Gi\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Retain\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/data/pv3\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.109.100\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始创建")]),t._v("\nkubectl create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" pv.yaml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看pv, 注意pv不属于”名称空间“中的资源")]),t._v("\nkubectl get "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" wide\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#准备创建pvc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" pvc.yaml\n")])])]),s("p",[t._v("pvc.yaml : ")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc1\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc2\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc3\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始创建")]),t._v("\nkubectl create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" pvc.yaml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看pvc")]),t._v("\nkubectl get pvc  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" wide\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pod使用pvc的示例")]),t._v("\n")])])]),s("p",[t._v("创建pod时使用pvc，示例：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod1\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"while true;do echo pod1 >> /root/out.txt; sleep 10; done;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod2\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.30")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"while true;do echo pod2 >> /root/out.txt; sleep 10; done;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" volume\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc2\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),s("h4",{attrs:{id:"_6-认证与安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-认证与安全"}},[t._v("#")]),t._v(" 6）认证与安全")]),t._v(" "),s("h4",{attrs:{id:"实战-创建一个只能管理dev空间下pods资源的账号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战-创建一个只能管理dev空间下pods资源的账号"}},[t._v("#")]),t._v(" ——实战：创建一个只能管理dev空间下Pods资源的账号")]),t._v(" "),s("ul",[s("li",[t._v("创建账号")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1) 创建证书")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /etc/kubernetes/pki/\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("umask 077"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("openssl genrsa "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-out")]),t._v(" devman.key "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2) 用apiserver的证书去签署")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2-1) 签名申请，申请的用户是devman,组是devgroup")]),t._v("\nopenssl req "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-key")]),t._v(" devman.key "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-out")]),t._v(" devman.csr "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-subj")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/CN=devman/O=devgroup"')]),t._v("     \nopenssl x509 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-req")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-in")]),t._v(" devman.csr "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-CA")]),t._v(" ca.crt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-CAkey")]),t._v(" ca.key "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-CAcreateserial")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-out")]),t._v(" devman.crt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-days")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3650")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3) 设置集群、用户、上下文信息")]),t._v("\nkubectl config set-cluster kubernetes --embed-certs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true --certificate-authority"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/ca.crt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--server")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://192.168.109.100:6443\nkubectl config set-credentials devman --embed-certs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true --client-certificate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/devman.crt --client-key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/devman.key\nkubectl config set-context devman@kubernetes "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cluster")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubernetes "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("devman\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换账户到devman")]),t._v("\nkubectl config use-context devman@kubernetes\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看dev下pod，发现没有权限")]),t._v("\nkubectl get pods "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提示Error...")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("2） 创建Role和RoleBinding，为devman用户授权")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到admin账户")]),t._v("\nkubectl config use-context kubernetes-admin@kubernetes\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" dev-role.yaml\n\n")])])]),s("p",[t._v("dev-role.yaml：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RoleBinding\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" authorization"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("binding\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" devman\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始授权")]),t._v("\n kubectl create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" dev-role.yaml\n\n")])])]),s("ul",[s("li",[t._v("3) 切换账户，再次验证")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换账户到devman")]),t._v("\nkubectl config use-context devman@kubernetes\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#再次查看是否有权限")]),t._v("\nkubectl get pods "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 为了不影响后面的学习,切回admin账户")]),t._v("\nkubectl config use-context kubernetes-admin@kubernetes\n\n")])])]),s("h4",{attrs:{id:"_7-dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-dashboard"}},[t._v("#")]),t._v(" 7）DashBoard")]),t._v(" "),s("p",[t._v("通过web图形界面管理k8s。")]),t._v(" "),s("h4",{attrs:{id:"部署dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署dashboard"}},[t._v("#")]),t._v(" ——部署Dashboard")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载yaml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v("  https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改kubernetes-dashboard的Service类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" recommended.yaml\n\n")])])]),s("p",[t._v("recommended.yaml：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("k8s-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePort  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8443")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30009")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("k8s-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始部署")]),t._v("\nkubectl create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" recommended.yaml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看namespace下的kubernetes-dashboard下的资源，发现正常运行")]),t._v("\nkubectl get pod,svc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kubernetes-dashboard\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#下面先获取token，我们再进行登录，用的是"https"协议访问的，http不行！！')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始创建账号，获取token")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建账号")]),t._v("\nkubectl create serviceaccount dashboard-admin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kubernetes-dashboard\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 授权")]),t._v("\nkubectl create clusterrolebinding dashboard-admin-rb "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--clusterrole")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cluster-admin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--serviceaccount")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubernetes-dashboard:dashboard-admin\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取token")]),t._v("\nkubectl get secrets "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kubernetes-dashboard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" dashboard-admin\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意，下面用到上面的输出，即 ”dashboard-admin-token-xbqhh“")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取下面命令输出的token值")]),t._v("\nkubectl describe secrets dashboard-admin-token-xbqhh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" kubernetes-dashboard\n\n\n")])])]),s("p",[t._v('访问：注意，使用https 协议访问 "kubectl get pod,svc -n kubernetes-dashboard" 的"service/kubernetes-dashboard"')]),t._v(" "),s("p",[t._v("填入上面获取的token，即可成功登录：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/18476305640/typora@master/image/2022/02/26/20220226150102805.png",alt:""}})])])}),[],!1,null,null,null);s.default=n.exports}}]);